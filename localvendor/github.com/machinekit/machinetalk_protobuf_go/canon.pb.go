// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: machinetalk/protobuf/canon.proto

package machinetalk_protobuf_go

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Emc_Traj_Set_G5X struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Origin   *EmcPose     `protobuf:"bytes,10,req,name=origin" json:"origin,omitempty"`
	G5XIndex *OriginIndex `protobuf:"varint,20,req,name=g5x_index,json=g5xIndex,enum=machinetalk.OriginIndex" json:"g5x_index,omitempty"`
}

func (x *Emc_Traj_Set_G5X) Reset() {
	*x = Emc_Traj_Set_G5X{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetalk_protobuf_canon_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Emc_Traj_Set_G5X) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Emc_Traj_Set_G5X) ProtoMessage() {}

func (x *Emc_Traj_Set_G5X) ProtoReflect() protoreflect.Message {
	mi := &file_machinetalk_protobuf_canon_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Emc_Traj_Set_G5X.ProtoReflect.Descriptor instead.
func (*Emc_Traj_Set_G5X) Descriptor() ([]byte, []int) {
	return file_machinetalk_protobuf_canon_proto_rawDescGZIP(), []int{0}
}

func (x *Emc_Traj_Set_G5X) GetOrigin() *EmcPose {
	if x != nil {
		return x.Origin
	}
	return nil
}

func (x *Emc_Traj_Set_G5X) GetG5XIndex() OriginIndex {
	if x != nil && x.G5XIndex != nil {
		return *x.G5XIndex
	}
	return OriginIndex_ORIGIN_UNKNOWN
}

type Emc_Traj_Set_G92 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Origin *EmcPose `protobuf:"bytes,10,req,name=origin" json:"origin,omitempty"`
}

func (x *Emc_Traj_Set_G92) Reset() {
	*x = Emc_Traj_Set_G92{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetalk_protobuf_canon_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Emc_Traj_Set_G92) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Emc_Traj_Set_G92) ProtoMessage() {}

func (x *Emc_Traj_Set_G92) ProtoReflect() protoreflect.Message {
	mi := &file_machinetalk_protobuf_canon_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Emc_Traj_Set_G92.ProtoReflect.Descriptor instead.
func (*Emc_Traj_Set_G92) Descriptor() ([]byte, []int) {
	return file_machinetalk_protobuf_canon_proto_rawDescGZIP(), []int{1}
}

func (x *Emc_Traj_Set_G92) GetOrigin() *EmcPose {
	if x != nil {
		return x.Origin
	}
	return nil
}

type Emc_Traj_Set_Rotation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rotation *float64 `protobuf:"fixed64,10,req,name=rotation" json:"rotation,omitempty"`
}

func (x *Emc_Traj_Set_Rotation) Reset() {
	*x = Emc_Traj_Set_Rotation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetalk_protobuf_canon_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Emc_Traj_Set_Rotation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Emc_Traj_Set_Rotation) ProtoMessage() {}

func (x *Emc_Traj_Set_Rotation) ProtoReflect() protoreflect.Message {
	mi := &file_machinetalk_protobuf_canon_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Emc_Traj_Set_Rotation.ProtoReflect.Descriptor instead.
func (*Emc_Traj_Set_Rotation) Descriptor() ([]byte, []int) {
	return file_machinetalk_protobuf_canon_proto_rawDescGZIP(), []int{2}
}

func (x *Emc_Traj_Set_Rotation) GetRotation() float64 {
	if x != nil && x.Rotation != nil {
		return *x.Rotation
	}
	return 0
}

type Emc_Traj_Linear_Move struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        *MotionType `protobuf:"varint,10,req,name=type,enum=machinetalk.MotionType" json:"type,omitempty"`
	End         *EmcPose    `protobuf:"bytes,20,req,name=end" json:"end,omitempty"`
	Vel         *float64    `protobuf:"fixed64,30,req,name=vel" json:"vel,omitempty"`
	IniMaxvel   *float64    `protobuf:"fixed64,40,req,name=ini_maxvel,json=iniMaxvel" json:"ini_maxvel,omitempty"`
	Acc         *float64    `protobuf:"fixed64,50,req,name=acc" json:"acc,omitempty"`
	FeedMode    *bool       `protobuf:"varint,60,req,name=feed_mode,json=feedMode" json:"feed_mode,omitempty"`
	Indexrotary *int32      `protobuf:"varint,70,req,name=indexrotary" json:"indexrotary,omitempty"`
}

func (x *Emc_Traj_Linear_Move) Reset() {
	*x = Emc_Traj_Linear_Move{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetalk_protobuf_canon_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Emc_Traj_Linear_Move) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Emc_Traj_Linear_Move) ProtoMessage() {}

func (x *Emc_Traj_Linear_Move) ProtoReflect() protoreflect.Message {
	mi := &file_machinetalk_protobuf_canon_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Emc_Traj_Linear_Move.ProtoReflect.Descriptor instead.
func (*Emc_Traj_Linear_Move) Descriptor() ([]byte, []int) {
	return file_machinetalk_protobuf_canon_proto_rawDescGZIP(), []int{3}
}

func (x *Emc_Traj_Linear_Move) GetType() MotionType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return MotionType__EMC_MOTION_TYPE_NONE
}

func (x *Emc_Traj_Linear_Move) GetEnd() *EmcPose {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *Emc_Traj_Linear_Move) GetVel() float64 {
	if x != nil && x.Vel != nil {
		return *x.Vel
	}
	return 0
}

func (x *Emc_Traj_Linear_Move) GetIniMaxvel() float64 {
	if x != nil && x.IniMaxvel != nil {
		return *x.IniMaxvel
	}
	return 0
}

func (x *Emc_Traj_Linear_Move) GetAcc() float64 {
	if x != nil && x.Acc != nil {
		return *x.Acc
	}
	return 0
}

func (x *Emc_Traj_Linear_Move) GetFeedMode() bool {
	if x != nil && x.FeedMode != nil {
		return *x.FeedMode
	}
	return false
}

func (x *Emc_Traj_Linear_Move) GetIndexrotary() int32 {
	if x != nil && x.Indexrotary != nil {
		return *x.Indexrotary
	}
	return 0
}

type Emc_Traj_Probe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      *MotionType `protobuf:"varint,10,req,name=type,enum=machinetalk.MotionType" json:"type,omitempty"`
	Pos       *EmcPose    `protobuf:"bytes,20,req,name=pos" json:"pos,omitempty"`
	Vel       *float64    `protobuf:"fixed64,30,req,name=vel" json:"vel,omitempty"`
	IniMaxvel *float64    `protobuf:"fixed64,40,req,name=ini_maxvel,json=iniMaxvel" json:"ini_maxvel,omitempty"`
	Acc       *float64    `protobuf:"fixed64,50,req,name=acc" json:"acc,omitempty"`
	ProbeType *uint32     `protobuf:"varint,60,req,name=probe_type,json=probeType" json:"probe_type,omitempty"`
}

func (x *Emc_Traj_Probe) Reset() {
	*x = Emc_Traj_Probe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetalk_protobuf_canon_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Emc_Traj_Probe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Emc_Traj_Probe) ProtoMessage() {}

func (x *Emc_Traj_Probe) ProtoReflect() protoreflect.Message {
	mi := &file_machinetalk_protobuf_canon_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Emc_Traj_Probe.ProtoReflect.Descriptor instead.
func (*Emc_Traj_Probe) Descriptor() ([]byte, []int) {
	return file_machinetalk_protobuf_canon_proto_rawDescGZIP(), []int{4}
}

func (x *Emc_Traj_Probe) GetType() MotionType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return MotionType__EMC_MOTION_TYPE_NONE
}

func (x *Emc_Traj_Probe) GetPos() *EmcPose {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *Emc_Traj_Probe) GetVel() float64 {
	if x != nil && x.Vel != nil {
		return *x.Vel
	}
	return 0
}

func (x *Emc_Traj_Probe) GetIniMaxvel() float64 {
	if x != nil && x.IniMaxvel != nil {
		return *x.IniMaxvel
	}
	return 0
}

func (x *Emc_Traj_Probe) GetAcc() float64 {
	if x != nil && x.Acc != nil {
		return *x.Acc
	}
	return 0
}

func (x *Emc_Traj_Probe) GetProbeType() uint32 {
	if x != nil && x.ProbeType != nil {
		return *x.ProbeType
	}
	return 0
}

type Emc_Traj_Circular_Move struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      *MotionType  `protobuf:"varint,10,req,name=type,enum=machinetalk.MotionType" json:"type,omitempty"` // redundant - identified by message type
	End       *EmcPose     `protobuf:"bytes,20,req,name=end" json:"end,omitempty"`
	Center    *PmCartesian `protobuf:"bytes,25,req,name=center" json:"center,omitempty"`
	Normal    *PmCartesian `protobuf:"bytes,27,req,name=normal" json:"normal,omitempty"`
	Vel       *float64     `protobuf:"fixed64,30,req,name=vel" json:"vel,omitempty"`
	IniMaxvel *float64     `protobuf:"fixed64,40,req,name=ini_maxvel,json=iniMaxvel" json:"ini_maxvel,omitempty"`
	Acc       *float64     `protobuf:"fixed64,50,req,name=acc" json:"acc,omitempty"`
	FeedMode  *bool        `protobuf:"varint,60,req,name=feed_mode,json=feedMode" json:"feed_mode,omitempty"`
	Turn      *int32       `protobuf:"varint,70,req,name=turn" json:"turn,omitempty"`
}

func (x *Emc_Traj_Circular_Move) Reset() {
	*x = Emc_Traj_Circular_Move{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetalk_protobuf_canon_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Emc_Traj_Circular_Move) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Emc_Traj_Circular_Move) ProtoMessage() {}

func (x *Emc_Traj_Circular_Move) ProtoReflect() protoreflect.Message {
	mi := &file_machinetalk_protobuf_canon_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Emc_Traj_Circular_Move.ProtoReflect.Descriptor instead.
func (*Emc_Traj_Circular_Move) Descriptor() ([]byte, []int) {
	return file_machinetalk_protobuf_canon_proto_rawDescGZIP(), []int{5}
}

func (x *Emc_Traj_Circular_Move) GetType() MotionType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return MotionType__EMC_MOTION_TYPE_NONE
}

func (x *Emc_Traj_Circular_Move) GetEnd() *EmcPose {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *Emc_Traj_Circular_Move) GetCenter() *PmCartesian {
	if x != nil {
		return x.Center
	}
	return nil
}

func (x *Emc_Traj_Circular_Move) GetNormal() *PmCartesian {
	if x != nil {
		return x.Normal
	}
	return nil
}

func (x *Emc_Traj_Circular_Move) GetVel() float64 {
	if x != nil && x.Vel != nil {
		return *x.Vel
	}
	return 0
}

func (x *Emc_Traj_Circular_Move) GetIniMaxvel() float64 {
	if x != nil && x.IniMaxvel != nil {
		return *x.IniMaxvel
	}
	return 0
}

func (x *Emc_Traj_Circular_Move) GetAcc() float64 {
	if x != nil && x.Acc != nil {
		return *x.Acc
	}
	return 0
}

func (x *Emc_Traj_Circular_Move) GetFeedMode() bool {
	if x != nil && x.FeedMode != nil {
		return *x.FeedMode
	}
	return false
}

func (x *Emc_Traj_Circular_Move) GetTurn() int32 {
	if x != nil && x.Turn != nil {
		return *x.Turn
	}
	return 0
}

type Emc_Traj_Rigid_Tap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pos       *EmcPose `protobuf:"bytes,20,req,name=pos" json:"pos,omitempty"`
	Vel       *float64 `protobuf:"fixed64,30,req,name=vel" json:"vel,omitempty"`
	IniMaxvel *float64 `protobuf:"fixed64,40,req,name=ini_maxvel,json=iniMaxvel" json:"ini_maxvel,omitempty"`
	Acc       *float64 `protobuf:"fixed64,50,req,name=acc" json:"acc,omitempty"`
}

func (x *Emc_Traj_Rigid_Tap) Reset() {
	*x = Emc_Traj_Rigid_Tap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetalk_protobuf_canon_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Emc_Traj_Rigid_Tap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Emc_Traj_Rigid_Tap) ProtoMessage() {}

func (x *Emc_Traj_Rigid_Tap) ProtoReflect() protoreflect.Message {
	mi := &file_machinetalk_protobuf_canon_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Emc_Traj_Rigid_Tap.ProtoReflect.Descriptor instead.
func (*Emc_Traj_Rigid_Tap) Descriptor() ([]byte, []int) {
	return file_machinetalk_protobuf_canon_proto_rawDescGZIP(), []int{6}
}

func (x *Emc_Traj_Rigid_Tap) GetPos() *EmcPose {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *Emc_Traj_Rigid_Tap) GetVel() float64 {
	if x != nil && x.Vel != nil {
		return *x.Vel
	}
	return 0
}

func (x *Emc_Traj_Rigid_Tap) GetIniMaxvel() float64 {
	if x != nil && x.IniMaxvel != nil {
		return *x.IniMaxvel
	}
	return 0
}

func (x *Emc_Traj_Rigid_Tap) GetAcc() float64 {
	if x != nil && x.Acc != nil {
		return *x.Acc
	}
	return 0
}

type Emc_Traj_Set_Term_Cond struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cond      *TermConditionType `protobuf:"varint,10,req,name=cond,enum=machinetalk.TermConditionType" json:"cond,omitempty"`
	Tolerance *float64           `protobuf:"fixed64,20,req,name=tolerance" json:"tolerance,omitempty"`
}

func (x *Emc_Traj_Set_Term_Cond) Reset() {
	*x = Emc_Traj_Set_Term_Cond{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetalk_protobuf_canon_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Emc_Traj_Set_Term_Cond) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Emc_Traj_Set_Term_Cond) ProtoMessage() {}

func (x *Emc_Traj_Set_Term_Cond) ProtoReflect() protoreflect.Message {
	mi := &file_machinetalk_protobuf_canon_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Emc_Traj_Set_Term_Cond.ProtoReflect.Descriptor instead.
func (*Emc_Traj_Set_Term_Cond) Descriptor() ([]byte, []int) {
	return file_machinetalk_protobuf_canon_proto_rawDescGZIP(), []int{7}
}

func (x *Emc_Traj_Set_Term_Cond) GetCond() TermConditionType {
	if x != nil && x.Cond != nil {
		return *x.Cond
	}
	return TermConditionType__EMC_TRAJ_TERM_COND_STOP
}

func (x *Emc_Traj_Set_Term_Cond) GetTolerance() float64 {
	if x != nil && x.Tolerance != nil {
		return *x.Tolerance
	}
	return 0
}

type Emc_Traj_Set_Spindlesync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeedPerRevolution *float64 `protobuf:"fixed64,10,req,name=feed_per_revolution,json=feedPerRevolution" json:"feed_per_revolution,omitempty"`
	VelocityMode      *bool    `protobuf:"varint,20,req,name=velocity_mode,json=velocityMode" json:"velocity_mode,omitempty"`
}

func (x *Emc_Traj_Set_Spindlesync) Reset() {
	*x = Emc_Traj_Set_Spindlesync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetalk_protobuf_canon_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Emc_Traj_Set_Spindlesync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Emc_Traj_Set_Spindlesync) ProtoMessage() {}

func (x *Emc_Traj_Set_Spindlesync) ProtoReflect() protoreflect.Message {
	mi := &file_machinetalk_protobuf_canon_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Emc_Traj_Set_Spindlesync.ProtoReflect.Descriptor instead.
func (*Emc_Traj_Set_Spindlesync) Descriptor() ([]byte, []int) {
	return file_machinetalk_protobuf_canon_proto_rawDescGZIP(), []int{8}
}

func (x *Emc_Traj_Set_Spindlesync) GetFeedPerRevolution() float64 {
	if x != nil && x.FeedPerRevolution != nil {
		return *x.FeedPerRevolution
	}
	return 0
}

func (x *Emc_Traj_Set_Spindlesync) GetVelocityMode() bool {
	if x != nil && x.VelocityMode != nil {
		return *x.VelocityMode
	}
	return false
}

type Emc_Traj_Delay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Delay *float64 `protobuf:"fixed64,10,req,name=delay" json:"delay,omitempty"`
}

func (x *Emc_Traj_Delay) Reset() {
	*x = Emc_Traj_Delay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetalk_protobuf_canon_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Emc_Traj_Delay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Emc_Traj_Delay) ProtoMessage() {}

func (x *Emc_Traj_Delay) ProtoReflect() protoreflect.Message {
	mi := &file_machinetalk_protobuf_canon_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Emc_Traj_Delay.ProtoReflect.Descriptor instead.
func (*Emc_Traj_Delay) Descriptor() ([]byte, []int) {
	return file_machinetalk_protobuf_canon_proto_rawDescGZIP(), []int{9}
}

func (x *Emc_Traj_Delay) GetDelay() float64 {
	if x != nil && x.Delay != nil {
		return *x.Delay
	}
	return 0
}

type Emc_Spindle_On struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Speed   *float64 `protobuf:"fixed64,10,req,name=speed,def=0" json:"speed,omitempty"`
	Factor  *float64 `protobuf:"fixed64,20,req,name=factor,def=0" json:"factor,omitempty"`
	Xoffset *float64 `protobuf:"fixed64,30,req,name=xoffset,def=0" json:"xoffset,omitempty"`
}

// Default values for Emc_Spindle_On fields.
const (
	Default_Emc_Spindle_On_Speed   = float64(0)
	Default_Emc_Spindle_On_Factor  = float64(0)
	Default_Emc_Spindle_On_Xoffset = float64(0)
)

func (x *Emc_Spindle_On) Reset() {
	*x = Emc_Spindle_On{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetalk_protobuf_canon_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Emc_Spindle_On) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Emc_Spindle_On) ProtoMessage() {}

func (x *Emc_Spindle_On) ProtoReflect() protoreflect.Message {
	mi := &file_machinetalk_protobuf_canon_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Emc_Spindle_On.ProtoReflect.Descriptor instead.
func (*Emc_Spindle_On) Descriptor() ([]byte, []int) {
	return file_machinetalk_protobuf_canon_proto_rawDescGZIP(), []int{10}
}

func (x *Emc_Spindle_On) GetSpeed() float64 {
	if x != nil && x.Speed != nil {
		return *x.Speed
	}
	return Default_Emc_Spindle_On_Speed
}

func (x *Emc_Spindle_On) GetFactor() float64 {
	if x != nil && x.Factor != nil {
		return *x.Factor
	}
	return Default_Emc_Spindle_On_Factor
}

func (x *Emc_Spindle_On) GetXoffset() float64 {
	if x != nil && x.Xoffset != nil {
		return *x.Xoffset
	}
	return Default_Emc_Spindle_On_Xoffset
}

type Emc_Spindle_Speed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Speed   *float64 `protobuf:"fixed64,10,req,name=speed" json:"speed,omitempty"`
	Factor  *float64 `protobuf:"fixed64,20,req,name=factor" json:"factor,omitempty"`
	Xoffset *float64 `protobuf:"fixed64,30,req,name=xoffset" json:"xoffset,omitempty"`
}

func (x *Emc_Spindle_Speed) Reset() {
	*x = Emc_Spindle_Speed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetalk_protobuf_canon_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Emc_Spindle_Speed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Emc_Spindle_Speed) ProtoMessage() {}

func (x *Emc_Spindle_Speed) ProtoReflect() protoreflect.Message {
	mi := &file_machinetalk_protobuf_canon_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Emc_Spindle_Speed.ProtoReflect.Descriptor instead.
func (*Emc_Spindle_Speed) Descriptor() ([]byte, []int) {
	return file_machinetalk_protobuf_canon_proto_rawDescGZIP(), []int{11}
}

func (x *Emc_Spindle_Speed) GetSpeed() float64 {
	if x != nil && x.Speed != nil {
		return *x.Speed
	}
	return 0
}

func (x *Emc_Spindle_Speed) GetFactor() float64 {
	if x != nil && x.Factor != nil {
		return *x.Factor
	}
	return 0
}

func (x *Emc_Spindle_Speed) GetXoffset() float64 {
	if x != nil && x.Xoffset != nil {
		return *x.Xoffset
	}
	return 0
}

type Emc_Spindle_Orient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orientation *float64        `protobuf:"fixed64,10,req,name=orientation" json:"orientation,omitempty"`
	Mode        *CanonDirection `protobuf:"varint,20,req,name=mode,enum=machinetalk.CanonDirection" json:"mode,omitempty"`
}

func (x *Emc_Spindle_Orient) Reset() {
	*x = Emc_Spindle_Orient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetalk_protobuf_canon_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Emc_Spindle_Orient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Emc_Spindle_Orient) ProtoMessage() {}

func (x *Emc_Spindle_Orient) ProtoReflect() protoreflect.Message {
	mi := &file_machinetalk_protobuf_canon_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Emc_Spindle_Orient.ProtoReflect.Descriptor instead.
func (*Emc_Spindle_Orient) Descriptor() ([]byte, []int) {
	return file_machinetalk_protobuf_canon_proto_rawDescGZIP(), []int{12}
}

func (x *Emc_Spindle_Orient) GetOrientation() float64 {
	if x != nil && x.Orientation != nil {
		return *x.Orientation
	}
	return 0
}

func (x *Emc_Spindle_Orient) GetMode() CanonDirection {
	if x != nil && x.Mode != nil {
		return *x.Mode
	}
	return CanonDirection__CANON_STOPPED
}

type Emc_Spindle_Wait_Orient_Complete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timeout *float64 `protobuf:"fixed64,10,req,name=timeout" json:"timeout,omitempty"`
}

func (x *Emc_Spindle_Wait_Orient_Complete) Reset() {
	*x = Emc_Spindle_Wait_Orient_Complete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetalk_protobuf_canon_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Emc_Spindle_Wait_Orient_Complete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Emc_Spindle_Wait_Orient_Complete) ProtoMessage() {}

func (x *Emc_Spindle_Wait_Orient_Complete) ProtoReflect() protoreflect.Message {
	mi := &file_machinetalk_protobuf_canon_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Emc_Spindle_Wait_Orient_Complete.ProtoReflect.Descriptor instead.
func (*Emc_Spindle_Wait_Orient_Complete) Descriptor() ([]byte, []int) {
	return file_machinetalk_protobuf_canon_proto_rawDescGZIP(), []int{13}
}

func (x *Emc_Spindle_Wait_Orient_Complete) GetTimeout() float64 {
	if x != nil && x.Timeout != nil {
		return *x.Timeout
	}
	return 0
}

type Emc_Tool_Set_Offset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pocket      *int32   `protobuf:"varint,10,req,name=pocket" json:"pocket,omitempty"`
	Toolno      *int32   `protobuf:"varint,15,req,name=toolno" json:"toolno,omitempty"`
	Offset      *EmcPose `protobuf:"bytes,20,req,name=offset" json:"offset,omitempty"`
	Diameter    *float64 `protobuf:"fixed64,30,req,name=diameter" json:"diameter,omitempty"`
	Frontangle  *float64 `protobuf:"fixed64,40,req,name=frontangle" json:"frontangle,omitempty"`
	Backangle   *float64 `protobuf:"fixed64,50,req,name=backangle" json:"backangle,omitempty"`
	Orientation *int32   `protobuf:"varint,60,req,name=orientation" json:"orientation,omitempty"`
}

func (x *Emc_Tool_Set_Offset) Reset() {
	*x = Emc_Tool_Set_Offset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetalk_protobuf_canon_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Emc_Tool_Set_Offset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Emc_Tool_Set_Offset) ProtoMessage() {}

func (x *Emc_Tool_Set_Offset) ProtoReflect() protoreflect.Message {
	mi := &file_machinetalk_protobuf_canon_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Emc_Tool_Set_Offset.ProtoReflect.Descriptor instead.
func (*Emc_Tool_Set_Offset) Descriptor() ([]byte, []int) {
	return file_machinetalk_protobuf_canon_proto_rawDescGZIP(), []int{14}
}

func (x *Emc_Tool_Set_Offset) GetPocket() int32 {
	if x != nil && x.Pocket != nil {
		return *x.Pocket
	}
	return 0
}

func (x *Emc_Tool_Set_Offset) GetToolno() int32 {
	if x != nil && x.Toolno != nil {
		return *x.Toolno
	}
	return 0
}

func (x *Emc_Tool_Set_Offset) GetOffset() *EmcPose {
	if x != nil {
		return x.Offset
	}
	return nil
}

func (x *Emc_Tool_Set_Offset) GetDiameter() float64 {
	if x != nil && x.Diameter != nil {
		return *x.Diameter
	}
	return 0
}

func (x *Emc_Tool_Set_Offset) GetFrontangle() float64 {
	if x != nil && x.Frontangle != nil {
		return *x.Frontangle
	}
	return 0
}

func (x *Emc_Tool_Set_Offset) GetBackangle() float64 {
	if x != nil && x.Backangle != nil {
		return *x.Backangle
	}
	return 0
}

func (x *Emc_Tool_Set_Offset) GetOrientation() int32 {
	if x != nil && x.Orientation != nil {
		return *x.Orientation
	}
	return 0
}

type Emc_Traj_Set_Offset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset *EmcPose `protobuf:"bytes,10,req,name=offset" json:"offset,omitempty"`
}

func (x *Emc_Traj_Set_Offset) Reset() {
	*x = Emc_Traj_Set_Offset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetalk_protobuf_canon_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Emc_Traj_Set_Offset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Emc_Traj_Set_Offset) ProtoMessage() {}

func (x *Emc_Traj_Set_Offset) ProtoReflect() protoreflect.Message {
	mi := &file_machinetalk_protobuf_canon_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Emc_Traj_Set_Offset.ProtoReflect.Descriptor instead.
func (*Emc_Traj_Set_Offset) Descriptor() ([]byte, []int) {
	return file_machinetalk_protobuf_canon_proto_rawDescGZIP(), []int{15}
}

func (x *Emc_Traj_Set_Offset) GetOffset() *EmcPose {
	if x != nil {
		return x.Offset
	}
	return nil
}

type Emc_Tool_Prepare struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pocket *int32 `protobuf:"varint,10,req,name=pocket" json:"pocket,omitempty"`
	Tool   *int32 `protobuf:"varint,20,req,name=tool" json:"tool,omitempty"`
}

func (x *Emc_Tool_Prepare) Reset() {
	*x = Emc_Tool_Prepare{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetalk_protobuf_canon_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Emc_Tool_Prepare) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Emc_Tool_Prepare) ProtoMessage() {}

func (x *Emc_Tool_Prepare) ProtoReflect() protoreflect.Message {
	mi := &file_machinetalk_protobuf_canon_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Emc_Tool_Prepare.ProtoReflect.Descriptor instead.
func (*Emc_Tool_Prepare) Descriptor() ([]byte, []int) {
	return file_machinetalk_protobuf_canon_proto_rawDescGZIP(), []int{16}
}

func (x *Emc_Tool_Prepare) GetPocket() int32 {
	if x != nil && x.Pocket != nil {
		return *x.Pocket
	}
	return 0
}

func (x *Emc_Tool_Prepare) GetTool() int32 {
	if x != nil && x.Tool != nil {
		return *x.Tool
	}
	return 0
}

type Emc_Tool_Set_Number struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tool *int32 `protobuf:"varint,10,req,name=tool" json:"tool,omitempty"`
}

func (x *Emc_Tool_Set_Number) Reset() {
	*x = Emc_Tool_Set_Number{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetalk_protobuf_canon_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Emc_Tool_Set_Number) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Emc_Tool_Set_Number) ProtoMessage() {}

func (x *Emc_Tool_Set_Number) ProtoReflect() protoreflect.Message {
	mi := &file_machinetalk_protobuf_canon_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Emc_Tool_Set_Number.ProtoReflect.Descriptor instead.
func (*Emc_Tool_Set_Number) Descriptor() ([]byte, []int) {
	return file_machinetalk_protobuf_canon_proto_rawDescGZIP(), []int{17}
}

func (x *Emc_Tool_Set_Number) GetTool() int32 {
	if x != nil && x.Tool != nil {
		return *x.Tool
	}
	return 0
}

type Emc_Traj_Set_Fo_Enable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode *bool `protobuf:"varint,10,req,name=mode" json:"mode,omitempty"`
}

func (x *Emc_Traj_Set_Fo_Enable) Reset() {
	*x = Emc_Traj_Set_Fo_Enable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetalk_protobuf_canon_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Emc_Traj_Set_Fo_Enable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Emc_Traj_Set_Fo_Enable) ProtoMessage() {}

func (x *Emc_Traj_Set_Fo_Enable) ProtoReflect() protoreflect.Message {
	mi := &file_machinetalk_protobuf_canon_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Emc_Traj_Set_Fo_Enable.ProtoReflect.Descriptor instead.
func (*Emc_Traj_Set_Fo_Enable) Descriptor() ([]byte, []int) {
	return file_machinetalk_protobuf_canon_proto_rawDescGZIP(), []int{18}
}

func (x *Emc_Traj_Set_Fo_Enable) GetMode() bool {
	if x != nil && x.Mode != nil {
		return *x.Mode
	}
	return false
}

type Emc_Traj_Set_So_Enable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode *bool `protobuf:"varint,10,req,name=mode" json:"mode,omitempty"`
}

func (x *Emc_Traj_Set_So_Enable) Reset() {
	*x = Emc_Traj_Set_So_Enable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetalk_protobuf_canon_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Emc_Traj_Set_So_Enable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Emc_Traj_Set_So_Enable) ProtoMessage() {}

func (x *Emc_Traj_Set_So_Enable) ProtoReflect() protoreflect.Message {
	mi := &file_machinetalk_protobuf_canon_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Emc_Traj_Set_So_Enable.ProtoReflect.Descriptor instead.
func (*Emc_Traj_Set_So_Enable) Descriptor() ([]byte, []int) {
	return file_machinetalk_protobuf_canon_proto_rawDescGZIP(), []int{19}
}

func (x *Emc_Traj_Set_So_Enable) GetMode() bool {
	if x != nil && x.Mode != nil {
		return *x.Mode
	}
	return false
}

type Emc_Traj_Set_Fh_Enable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode *bool `protobuf:"varint,10,req,name=mode" json:"mode,omitempty"`
}

func (x *Emc_Traj_Set_Fh_Enable) Reset() {
	*x = Emc_Traj_Set_Fh_Enable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetalk_protobuf_canon_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Emc_Traj_Set_Fh_Enable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Emc_Traj_Set_Fh_Enable) ProtoMessage() {}

func (x *Emc_Traj_Set_Fh_Enable) ProtoReflect() protoreflect.Message {
	mi := &file_machinetalk_protobuf_canon_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Emc_Traj_Set_Fh_Enable.ProtoReflect.Descriptor instead.
func (*Emc_Traj_Set_Fh_Enable) Descriptor() ([]byte, []int) {
	return file_machinetalk_protobuf_canon_proto_rawDescGZIP(), []int{20}
}

func (x *Emc_Traj_Set_Fh_Enable) GetMode() bool {
	if x != nil && x.Mode != nil {
		return *x.Mode
	}
	return false
}

type Emc_Motion_Adaptive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *bool `protobuf:"varint,10,req,name=status" json:"status,omitempty"`
}

func (x *Emc_Motion_Adaptive) Reset() {
	*x = Emc_Motion_Adaptive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetalk_protobuf_canon_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Emc_Motion_Adaptive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Emc_Motion_Adaptive) ProtoMessage() {}

func (x *Emc_Motion_Adaptive) ProtoReflect() protoreflect.Message {
	mi := &file_machinetalk_protobuf_canon_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Emc_Motion_Adaptive.ProtoReflect.Descriptor instead.
func (*Emc_Motion_Adaptive) Descriptor() ([]byte, []int) {
	return file_machinetalk_protobuf_canon_proto_rawDescGZIP(), []int{21}
}

func (x *Emc_Motion_Adaptive) GetStatus() bool {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return false
}

type Emc_Operator_Display struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      *int32  `protobuf:"varint,10,req,name=id" json:"id,omitempty"`
	Display *string `protobuf:"bytes,20,req,name=display" json:"display,omitempty"`
}

func (x *Emc_Operator_Display) Reset() {
	*x = Emc_Operator_Display{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetalk_protobuf_canon_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Emc_Operator_Display) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Emc_Operator_Display) ProtoMessage() {}

func (x *Emc_Operator_Display) ProtoReflect() protoreflect.Message {
	mi := &file_machinetalk_protobuf_canon_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Emc_Operator_Display.ProtoReflect.Descriptor instead.
func (*Emc_Operator_Display) Descriptor() ([]byte, []int) {
	return file_machinetalk_protobuf_canon_proto_rawDescGZIP(), []int{22}
}

func (x *Emc_Operator_Display) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *Emc_Operator_Display) GetDisplay() string {
	if x != nil && x.Display != nil {
		return *x.Display
	}
	return ""
}

type Emc_Operator_Text struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   *int32  `protobuf:"varint,10,req,name=id" json:"id,omitempty"`
	Text *string `protobuf:"bytes,20,req,name=text" json:"text,omitempty"`
}

func (x *Emc_Operator_Text) Reset() {
	*x = Emc_Operator_Text{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetalk_protobuf_canon_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Emc_Operator_Text) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Emc_Operator_Text) ProtoMessage() {}

func (x *Emc_Operator_Text) ProtoReflect() protoreflect.Message {
	mi := &file_machinetalk_protobuf_canon_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Emc_Operator_Text.ProtoReflect.Descriptor instead.
func (*Emc_Operator_Text) Descriptor() ([]byte, []int) {
	return file_machinetalk_protobuf_canon_proto_rawDescGZIP(), []int{23}
}

func (x *Emc_Operator_Text) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *Emc_Operator_Text) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

type Emc_Operator_Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    *int32  `protobuf:"varint,10,req,name=id" json:"id,omitempty"`
	Error *string `protobuf:"bytes,20,req,name=error" json:"error,omitempty"`
}

func (x *Emc_Operator_Error) Reset() {
	*x = Emc_Operator_Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetalk_protobuf_canon_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Emc_Operator_Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Emc_Operator_Error) ProtoMessage() {}

func (x *Emc_Operator_Error) ProtoReflect() protoreflect.Message {
	mi := &file_machinetalk_protobuf_canon_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Emc_Operator_Error.ProtoReflect.Descriptor instead.
func (*Emc_Operator_Error) Descriptor() ([]byte, []int) {
	return file_machinetalk_protobuf_canon_proto_rawDescGZIP(), []int{24}
}

func (x *Emc_Operator_Error) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *Emc_Operator_Error) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

type Emc_Motion_Set_Dout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index *uint32 `protobuf:"varint,10,req,name=index" json:"index,omitempty"`
	Start *bool   `protobuf:"varint,20,req,name=start" json:"start,omitempty"`
	End   *bool   `protobuf:"varint,30,req,name=end" json:"end,omitempty"`
	Now   *bool   `protobuf:"varint,40,req,name=now" json:"now,omitempty"`
}

func (x *Emc_Motion_Set_Dout) Reset() {
	*x = Emc_Motion_Set_Dout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetalk_protobuf_canon_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Emc_Motion_Set_Dout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Emc_Motion_Set_Dout) ProtoMessage() {}

func (x *Emc_Motion_Set_Dout) ProtoReflect() protoreflect.Message {
	mi := &file_machinetalk_protobuf_canon_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Emc_Motion_Set_Dout.ProtoReflect.Descriptor instead.
func (*Emc_Motion_Set_Dout) Descriptor() ([]byte, []int) {
	return file_machinetalk_protobuf_canon_proto_rawDescGZIP(), []int{25}
}

func (x *Emc_Motion_Set_Dout) GetIndex() uint32 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

func (x *Emc_Motion_Set_Dout) GetStart() bool {
	if x != nil && x.Start != nil {
		return *x.Start
	}
	return false
}

func (x *Emc_Motion_Set_Dout) GetEnd() bool {
	if x != nil && x.End != nil {
		return *x.End
	}
	return false
}

func (x *Emc_Motion_Set_Dout) GetNow() bool {
	if x != nil && x.Now != nil {
		return *x.Now
	}
	return false
}

type Emc_Motion_Set_Aout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index *uint32  `protobuf:"varint,10,req,name=index" json:"index,omitempty"`
	Start *float64 `protobuf:"fixed64,20,req,name=start" json:"start,omitempty"`
	End   *float64 `protobuf:"fixed64,30,req,name=end" json:"end,omitempty"`
	Now   *bool    `protobuf:"varint,40,req,name=now" json:"now,omitempty"`
}

func (x *Emc_Motion_Set_Aout) Reset() {
	*x = Emc_Motion_Set_Aout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetalk_protobuf_canon_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Emc_Motion_Set_Aout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Emc_Motion_Set_Aout) ProtoMessage() {}

func (x *Emc_Motion_Set_Aout) ProtoReflect() protoreflect.Message {
	mi := &file_machinetalk_protobuf_canon_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Emc_Motion_Set_Aout.ProtoReflect.Descriptor instead.
func (*Emc_Motion_Set_Aout) Descriptor() ([]byte, []int) {
	return file_machinetalk_protobuf_canon_proto_rawDescGZIP(), []int{26}
}

func (x *Emc_Motion_Set_Aout) GetIndex() uint32 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

func (x *Emc_Motion_Set_Aout) GetStart() float64 {
	if x != nil && x.Start != nil {
		return *x.Start
	}
	return 0
}

func (x *Emc_Motion_Set_Aout) GetEnd() float64 {
	if x != nil && x.End != nil {
		return *x.End
	}
	return 0
}

func (x *Emc_Motion_Set_Aout) GetNow() bool {
	if x != nil && x.Now != nil {
		return *x.Now
	}
	return false
}

type Emc_Aux_Input_Wait struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index     *uint32    `protobuf:"varint,10,req,name=index" json:"index,omitempty"`
	InputType *InputType `protobuf:"varint,20,req,name=input_type,json=inputType,enum=machinetalk.InputType" json:"input_type,omitempty"`
	WaitType  *WaitType  `protobuf:"varint,30,req,name=wait_type,json=waitType,enum=machinetalk.WaitType" json:"wait_type,omitempty"`
	Timeout   *float64   `protobuf:"fixed64,40,req,name=timeout" json:"timeout,omitempty"`
}

func (x *Emc_Aux_Input_Wait) Reset() {
	*x = Emc_Aux_Input_Wait{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetalk_protobuf_canon_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Emc_Aux_Input_Wait) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Emc_Aux_Input_Wait) ProtoMessage() {}

func (x *Emc_Aux_Input_Wait) ProtoReflect() protoreflect.Message {
	mi := &file_machinetalk_protobuf_canon_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Emc_Aux_Input_Wait.ProtoReflect.Descriptor instead.
func (*Emc_Aux_Input_Wait) Descriptor() ([]byte, []int) {
	return file_machinetalk_protobuf_canon_proto_rawDescGZIP(), []int{27}
}

func (x *Emc_Aux_Input_Wait) GetIndex() uint32 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

func (x *Emc_Aux_Input_Wait) GetInputType() InputType {
	if x != nil && x.InputType != nil {
		return *x.InputType
	}
	return InputType__ANALOG_INPUT
}

func (x *Emc_Aux_Input_Wait) GetWaitType() WaitType {
	if x != nil && x.WaitType != nil {
		return *x.WaitType
	}
	return WaitType_IMMEDIATE
}

func (x *Emc_Aux_Input_Wait) GetTimeout() float64 {
	if x != nil && x.Timeout != nil {
		return *x.Timeout
	}
	return 0
}

type Emc_Exec_Plugin_Ca1L struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Call []byte `protobuf:"bytes,20,req,name=call" json:"call,omitempty"`
}

func (x *Emc_Exec_Plugin_Ca1L) Reset() {
	*x = Emc_Exec_Plugin_Ca1L{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetalk_protobuf_canon_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Emc_Exec_Plugin_Ca1L) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Emc_Exec_Plugin_Ca1L) ProtoMessage() {}

func (x *Emc_Exec_Plugin_Ca1L) ProtoReflect() protoreflect.Message {
	mi := &file_machinetalk_protobuf_canon_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Emc_Exec_Plugin_Ca1L.ProtoReflect.Descriptor instead.
func (*Emc_Exec_Plugin_Ca1L) Descriptor() ([]byte, []int) {
	return file_machinetalk_protobuf_canon_proto_rawDescGZIP(), []int{28}
}

func (x *Emc_Exec_Plugin_Ca1L) GetCall() []byte {
	if x != nil {
		return x.Call
	}
	return nil
}

type Emc_Io_Plugin_Call struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Call []byte `protobuf:"bytes,20,req,name=call" json:"call,omitempty"`
}

func (x *Emc_Io_Plugin_Call) Reset() {
	*x = Emc_Io_Plugin_Call{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetalk_protobuf_canon_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Emc_Io_Plugin_Call) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Emc_Io_Plugin_Call) ProtoMessage() {}

func (x *Emc_Io_Plugin_Call) ProtoReflect() protoreflect.Message {
	mi := &file_machinetalk_protobuf_canon_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Emc_Io_Plugin_Call.ProtoReflect.Descriptor instead.
func (*Emc_Io_Plugin_Call) Descriptor() ([]byte, []int) {
	return file_machinetalk_protobuf_canon_proto_rawDescGZIP(), []int{29}
}

func (x *Emc_Io_Plugin_Call) GetCall() []byte {
	if x != nil {
		return x.Call
	}
	return nil
}

var File_machinetalk_protobuf_canon_proto protoreflect.FileDescriptor

var file_machinetalk_protobuf_canon_proto_rawDesc = []byte{
	0x0a, 0x20, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x61, 0x6c, 0x6b, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x63, 0x61, 0x6e, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0b, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x61, 0x6c, 0x6b, 0x1a,
	0x21, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x61, 0x6c, 0x6b, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x6e, 0x61, 0x6e, 0x6f, 0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x20, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x61, 0x6c, 0x6b, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x61, 0x6c,
	0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x63, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x6d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x74, 0x61, 0x6c, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x6d, 0x6f, 0x74, 0x63, 0x6d, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7e, 0x0a,
	0x10, 0x45, 0x6d, 0x63, 0x5f, 0x54, 0x72, 0x61, 0x6a, 0x5f, 0x53, 0x65, 0x74, 0x5f, 0x47, 0x35,
	0x78, 0x12, 0x2c, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x0a, 0x20, 0x02, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x61, 0x6c, 0x6b, 0x2e,
	0x45, 0x6d, 0x63, 0x50, 0x6f, 0x73, 0x65, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12,
	0x35, 0x0a, 0x09, 0x67, 0x35, 0x78, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x14, 0x20, 0x02,
	0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x61, 0x6c, 0x6b,
	0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x08, 0x67, 0x35,
	0x78, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x3a, 0x05, 0x92, 0x3f, 0x02, 0x48, 0x64, 0x22, 0x47, 0x0a,
	0x10, 0x45, 0x6d, 0x63, 0x5f, 0x54, 0x72, 0x61, 0x6a, 0x5f, 0x53, 0x65, 0x74, 0x5f, 0x47, 0x39,
	0x32, 0x12, 0x2c, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x0a, 0x20, 0x02, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x61, 0x6c, 0x6b, 0x2e,
	0x45, 0x6d, 0x63, 0x50, 0x6f, 0x73, 0x65, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x3a,
	0x05, 0x92, 0x3f, 0x02, 0x48, 0x65, 0x22, 0x3a, 0x0a, 0x15, 0x45, 0x6d, 0x63, 0x5f, 0x54, 0x72,
	0x61, 0x6a, 0x5f, 0x53, 0x65, 0x74, 0x5f, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x02, 0x28,
	0x01, 0x52, 0x08, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x05, 0x92, 0x3f, 0x02,
	0x48, 0x66, 0x22, 0xf4, 0x01, 0x0a, 0x14, 0x45, 0x6d, 0x63, 0x5f, 0x54, 0x72, 0x61, 0x6a, 0x5f,
	0x4c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x5f, 0x4d, 0x6f, 0x76, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x74, 0x61, 0x6c, 0x6b, 0x2e, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18,
	0x14, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74,
	0x61, 0x6c, 0x6b, 0x2e, 0x45, 0x6d, 0x63, 0x50, 0x6f, 0x73, 0x65, 0x52, 0x03, 0x65, 0x6e, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x76, 0x65, 0x6c, 0x18, 0x1e, 0x20, 0x02, 0x28, 0x01, 0x52, 0x03, 0x76,
	0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x69, 0x5f, 0x6d, 0x61, 0x78, 0x76, 0x65, 0x6c,
	0x18, 0x28, 0x20, 0x02, 0x28, 0x01, 0x52, 0x09, 0x69, 0x6e, 0x69, 0x4d, 0x61, 0x78, 0x76, 0x65,
	0x6c, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x63, 0x63, 0x18, 0x32, 0x20, 0x02, 0x28, 0x01, 0x52, 0x03,
	0x61, 0x63, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x3c, 0x20, 0x02, 0x28, 0x08, 0x52, 0x08, 0x66, 0x65, 0x65, 0x64, 0x4d, 0x6f, 0x64, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x72, 0x6f, 0x74, 0x61, 0x72, 0x79, 0x18,
	0x46, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0b, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x72, 0x6f, 0x74, 0x61,
	0x72, 0x79, 0x3a, 0x05, 0x92, 0x3f, 0x02, 0x48, 0x67, 0x22, 0xce, 0x01, 0x0a, 0x0e, 0x45, 0x6d,
	0x63, 0x5f, 0x54, 0x72, 0x61, 0x6a, 0x5f, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x12, 0x2b, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x74, 0x61, 0x6c, 0x6b, 0x2e, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x03, 0x70, 0x6f, 0x73,
	0x18, 0x14, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x74, 0x61, 0x6c, 0x6b, 0x2e, 0x45, 0x6d, 0x63, 0x50, 0x6f, 0x73, 0x65, 0x52, 0x03, 0x70, 0x6f,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x65, 0x6c, 0x18, 0x1e, 0x20, 0x02, 0x28, 0x01, 0x52, 0x03,
	0x76, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x69, 0x5f, 0x6d, 0x61, 0x78, 0x76, 0x65,
	0x6c, 0x18, 0x28, 0x20, 0x02, 0x28, 0x01, 0x52, 0x09, 0x69, 0x6e, 0x69, 0x4d, 0x61, 0x78, 0x76,
	0x65, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x63, 0x63, 0x18, 0x32, 0x20, 0x02, 0x28, 0x01, 0x52,
	0x03, 0x61, 0x63, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x3c, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x3a, 0x05, 0x92, 0x3f, 0x02, 0x48, 0x68, 0x22, 0xcc, 0x02, 0x0a, 0x16, 0x45,
	0x6d, 0x63, 0x5f, 0x54, 0x72, 0x61, 0x6a, 0x5f, 0x43, 0x69, 0x72, 0x63, 0x75, 0x6c, 0x61, 0x72,
	0x5f, 0x4d, 0x6f, 0x76, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20,
	0x02, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x61, 0x6c,
	0x6b, 0x2e, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x26, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x14, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x61, 0x6c, 0x6b, 0x2e, 0x45, 0x6d,
	0x63, 0x50, 0x6f, 0x73, 0x65, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x30, 0x0a, 0x06, 0x63, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x18, 0x19, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x74, 0x61, 0x6c, 0x6b, 0x2e, 0x50, 0x6d, 0x43, 0x61, 0x72, 0x74, 0x65,
	0x73, 0x69, 0x61, 0x6e, 0x52, 0x06, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x06,
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x18, 0x1b, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x61, 0x6c, 0x6b, 0x2e, 0x50, 0x6d, 0x43, 0x61, 0x72,
	0x74, 0x65, 0x73, 0x69, 0x61, 0x6e, 0x52, 0x06, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x12, 0x10,
	0x0a, 0x03, 0x76, 0x65, 0x6c, 0x18, 0x1e, 0x20, 0x02, 0x28, 0x01, 0x52, 0x03, 0x76, 0x65, 0x6c,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x69, 0x5f, 0x6d, 0x61, 0x78, 0x76, 0x65, 0x6c, 0x18, 0x28,
	0x20, 0x02, 0x28, 0x01, 0x52, 0x09, 0x69, 0x6e, 0x69, 0x4d, 0x61, 0x78, 0x76, 0x65, 0x6c, 0x12,
	0x10, 0x0a, 0x03, 0x61, 0x63, 0x63, 0x18, 0x32, 0x20, 0x02, 0x28, 0x01, 0x52, 0x03, 0x61, 0x63,
	0x63, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x3c,
	0x20, 0x02, 0x28, 0x08, 0x52, 0x08, 0x66, 0x65, 0x65, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x75, 0x72, 0x6e, 0x18, 0x46, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x74, 0x75,
	0x72, 0x6e, 0x3a, 0x05, 0x92, 0x3f, 0x02, 0x48, 0x69, 0x22, 0x86, 0x01, 0x0a, 0x12, 0x45, 0x6d,
	0x63, 0x5f, 0x54, 0x72, 0x61, 0x6a, 0x5f, 0x52, 0x69, 0x67, 0x69, 0x64, 0x5f, 0x54, 0x61, 0x70,
	0x12, 0x26, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x14, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x61, 0x6c, 0x6b, 0x2e, 0x45, 0x6d, 0x63, 0x50,
	0x6f, 0x73, 0x65, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x65, 0x6c, 0x18,
	0x1e, 0x20, 0x02, 0x28, 0x01, 0x52, 0x03, 0x76, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e,
	0x69, 0x5f, 0x6d, 0x61, 0x78, 0x76, 0x65, 0x6c, 0x18, 0x28, 0x20, 0x02, 0x28, 0x01, 0x52, 0x09,
	0x69, 0x6e, 0x69, 0x4d, 0x61, 0x78, 0x76, 0x65, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x63, 0x63,
	0x18, 0x32, 0x20, 0x02, 0x28, 0x01, 0x52, 0x03, 0x61, 0x63, 0x63, 0x3a, 0x05, 0x92, 0x3f, 0x02,
	0x48, 0x6a, 0x22, 0x71, 0x0a, 0x16, 0x45, 0x6d, 0x63, 0x5f, 0x54, 0x72, 0x61, 0x6a, 0x5f, 0x53,
	0x65, 0x74, 0x5f, 0x54, 0x65, 0x72, 0x6d, 0x5f, 0x43, 0x6f, 0x6e, 0x64, 0x12, 0x32, 0x0a, 0x04,
	0x63, 0x6f, 0x6e, 0x64, 0x18, 0x0a, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x74, 0x61, 0x6c, 0x6b, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x6e, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x14, 0x20,
	0x02, 0x28, 0x01, 0x52, 0x09, 0x74, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x3a, 0x05,
	0x92, 0x3f, 0x02, 0x48, 0x6b, 0x22, 0x76, 0x0a, 0x18, 0x45, 0x6d, 0x63, 0x5f, 0x54, 0x72, 0x61,
	0x6a, 0x5f, 0x53, 0x65, 0x74, 0x5f, 0x53, 0x70, 0x69, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x79, 0x6e,
	0x63, 0x12, 0x2e, 0x0a, 0x13, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x72, 0x65,
	0x76, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x02, 0x28, 0x01, 0x52, 0x11,
	0x66, 0x65, 0x65, 0x64, 0x50, 0x65, 0x72, 0x52, 0x65, 0x76, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x18, 0x14, 0x20, 0x02, 0x28, 0x08, 0x52, 0x0c, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69,
	0x74, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x3a, 0x05, 0x92, 0x3f, 0x02, 0x48, 0x6c, 0x22, 0x2d, 0x0a,
	0x0e, 0x45, 0x6d, 0x63, 0x5f, 0x54, 0x72, 0x61, 0x6a, 0x5f, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x0a, 0x20, 0x02, 0x28, 0x01, 0x52, 0x05,
	0x64, 0x65, 0x6c, 0x61, 0x79, 0x3a, 0x05, 0x92, 0x3f, 0x02, 0x48, 0x6d, 0x22, 0x68, 0x0a, 0x0e,
	0x45, 0x6d, 0x63, 0x5f, 0x53, 0x70, 0x69, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x4f, 0x6e, 0x12, 0x17,
	0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x02, 0x28, 0x01, 0x3a, 0x01, 0x30,
	0x52, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x06, 0x66, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x18, 0x14, 0x20, 0x02, 0x28, 0x01, 0x3a, 0x01, 0x30, 0x52, 0x06, 0x66, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x07, 0x78, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x1e, 0x20,
	0x02, 0x28, 0x01, 0x3a, 0x01, 0x30, 0x52, 0x07, 0x78, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x3a,
	0x05, 0x92, 0x3f, 0x02, 0x48, 0x6e, 0x22, 0x62, 0x0a, 0x11, 0x45, 0x6d, 0x63, 0x5f, 0x53, 0x70,
	0x69, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x70, 0x65, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x02, 0x28, 0x01, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x14, 0x20, 0x02, 0x28,
	0x01, 0x52, 0x06, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x78, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x1e, 0x20, 0x02, 0x28, 0x01, 0x52, 0x07, 0x78, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x3a, 0x05, 0x92, 0x3f, 0x02, 0x48, 0x6f, 0x22, 0x6e, 0x0a, 0x12, 0x45, 0x6d,
	0x63, 0x5f, 0x53, 0x70, 0x69, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x4f, 0x72, 0x69, 0x65, 0x6e, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x0a, 0x20, 0x02, 0x28, 0x01, 0x52, 0x0b, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x14, 0x20, 0x02, 0x28, 0x0e,
	0x32, 0x1b, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x61, 0x6c, 0x6b, 0x2e, 0x43,
	0x61, 0x6e, 0x6f, 0x6e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x6d,
	0x6f, 0x64, 0x65, 0x3a, 0x05, 0x92, 0x3f, 0x02, 0x48, 0x70, 0x22, 0x43, 0x0a, 0x20, 0x45, 0x6d,
	0x63, 0x5f, 0x53, 0x70, 0x69, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x57, 0x61, 0x69, 0x74, 0x5f, 0x4f,
	0x72, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x0a, 0x20, 0x02, 0x28, 0x01, 0x52,
	0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x3a, 0x05, 0x92, 0x3f, 0x02, 0x48, 0x71, 0x22,
	0xf6, 0x01, 0x0a, 0x13, 0x45, 0x6d, 0x63, 0x5f, 0x54, 0x6f, 0x6f, 0x6c, 0x5f, 0x53, 0x65, 0x74,
	0x5f, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x18, 0x0a, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x6f, 0x6f, 0x6c, 0x6e, 0x6f, 0x18, 0x0f, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x06, 0x74, 0x6f, 0x6f, 0x6c, 0x6e, 0x6f, 0x12, 0x2c, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x14, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x74, 0x61, 0x6c, 0x6b, 0x2e, 0x45, 0x6d, 0x63, 0x50, 0x6f, 0x73, 0x65, 0x52, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x18, 0x1e, 0x20, 0x02, 0x28, 0x01, 0x52, 0x08, 0x64, 0x69, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x18,
	0x28, 0x20, 0x02, 0x28, 0x01, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x61, 0x6e, 0x67, 0x6c,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61, 0x63, 0x6b, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x18, 0x32,
	0x20, 0x02, 0x28, 0x01, 0x52, 0x09, 0x62, 0x61, 0x63, 0x6b, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x3c,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x0b, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x3a, 0x05, 0x92, 0x3f, 0x02, 0x48, 0x72, 0x22, 0x4a, 0x0a, 0x13, 0x45, 0x6d, 0x63, 0x5f,
	0x54, 0x72, 0x61, 0x6a, 0x5f, 0x53, 0x65, 0x74, 0x5f, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x2c, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x61, 0x6c, 0x6b, 0x2e, 0x45, 0x6d,
	0x63, 0x50, 0x6f, 0x73, 0x65, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x3a, 0x05, 0x92,
	0x3f, 0x02, 0x48, 0x73, 0x22, 0x45, 0x0a, 0x10, 0x45, 0x6d, 0x63, 0x5f, 0x54, 0x6f, 0x6f, 0x6c,
	0x5f, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x18, 0x0a, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x6f, 0x6f, 0x6c, 0x18, 0x14, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04,
	0x74, 0x6f, 0x6f, 0x6c, 0x3a, 0x05, 0x92, 0x3f, 0x02, 0x48, 0x74, 0x22, 0x30, 0x0a, 0x13, 0x45,
	0x6d, 0x63, 0x5f, 0x54, 0x6f, 0x6f, 0x6c, 0x5f, 0x53, 0x65, 0x74, 0x5f, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x6f, 0x6f, 0x6c, 0x18, 0x0a, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x04, 0x74, 0x6f, 0x6f, 0x6c, 0x3a, 0x05, 0x92, 0x3f, 0x02, 0x48, 0x75, 0x22, 0x33, 0x0a,
	0x16, 0x45, 0x6d, 0x63, 0x5f, 0x54, 0x72, 0x61, 0x6a, 0x5f, 0x53, 0x65, 0x74, 0x5f, 0x46, 0x6f,
	0x5f, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x0a, 0x20, 0x02, 0x28, 0x08, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x3a, 0x05, 0x92, 0x3f, 0x02,
	0x48, 0x76, 0x22, 0x33, 0x0a, 0x16, 0x45, 0x6d, 0x63, 0x5f, 0x54, 0x72, 0x61, 0x6a, 0x5f, 0x53,
	0x65, 0x74, 0x5f, 0x53, 0x6f, 0x5f, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6d, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x02, 0x28, 0x08, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65,
	0x3a, 0x05, 0x92, 0x3f, 0x02, 0x48, 0x77, 0x22, 0x33, 0x0a, 0x16, 0x45, 0x6d, 0x63, 0x5f, 0x54,
	0x72, 0x61, 0x6a, 0x5f, 0x53, 0x65, 0x74, 0x5f, 0x46, 0x68, 0x5f, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x02, 0x28, 0x08, 0x52,
	0x04, 0x6d, 0x6f, 0x64, 0x65, 0x3a, 0x05, 0x92, 0x3f, 0x02, 0x48, 0x78, 0x22, 0x34, 0x0a, 0x13,
	0x45, 0x6d, 0x63, 0x5f, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x41, 0x64, 0x61, 0x70, 0x74,
	0x69, 0x76, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20,
	0x02, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x3a, 0x05, 0x92, 0x3f, 0x02,
	0x48, 0x79, 0x22, 0x47, 0x0a, 0x14, 0x45, 0x6d, 0x63, 0x5f, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x5f, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x0a, 0x20, 0x02, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x14, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x3a, 0x05, 0x92, 0x3f, 0x02, 0x48, 0x7a, 0x22, 0x3e, 0x0a, 0x11, 0x45,
	0x6d, 0x63, 0x5f, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x54, 0x65, 0x78, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x02, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x14, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x3a, 0x05, 0x92, 0x3f, 0x02, 0x48, 0x7b, 0x22, 0x41, 0x0a, 0x12, 0x45,
	0x6d, 0x63, 0x5f, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x02, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x14, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x3a, 0x05, 0x92, 0x3f, 0x02, 0x48, 0x7c, 0x22, 0x6c,
	0x0a, 0x13, 0x45, 0x6d, 0x63, 0x5f, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x53, 0x65, 0x74,
	0x5f, 0x44, 0x6f, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x0a,
	0x20, 0x02, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x14, 0x20, 0x02, 0x28, 0x08, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x1e, 0x20, 0x02, 0x28, 0x08, 0x52, 0x03,
	0x65, 0x6e, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x6f, 0x77, 0x18, 0x28, 0x20, 0x02, 0x28, 0x08,
	0x52, 0x03, 0x6e, 0x6f, 0x77, 0x3a, 0x05, 0x92, 0x3f, 0x02, 0x48, 0x7d, 0x22, 0x6c, 0x0a, 0x13,
	0x45, 0x6d, 0x63, 0x5f, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x53, 0x65, 0x74, 0x5f, 0x41,
	0x6f, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x0a, 0x20, 0x02,
	0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x18, 0x14, 0x20, 0x02, 0x28, 0x01, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x1e, 0x20, 0x02, 0x28, 0x01, 0x52, 0x03, 0x65, 0x6e,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x6f, 0x77, 0x18, 0x28, 0x20, 0x02, 0x28, 0x08, 0x52, 0x03,
	0x6e, 0x6f, 0x77, 0x3a, 0x05, 0x92, 0x3f, 0x02, 0x48, 0x7e, 0x22, 0xb6, 0x01, 0x0a, 0x12, 0x45,
	0x6d, 0x63, 0x5f, 0x41, 0x75, 0x78, 0x5f, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x57, 0x61, 0x69,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x0a, 0x20, 0x02, 0x28, 0x0d,
	0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x35, 0x0a, 0x0a, 0x69, 0x6e, 0x70, 0x75, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x14, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x61, 0x6c, 0x6b, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x09, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x32,
	0x0a, 0x09, 0x77, 0x61, 0x69, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x1e, 0x20, 0x02, 0x28,
	0x0e, 0x32, 0x15, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x61, 0x6c, 0x6b, 0x2e,
	0x57, 0x61, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x77, 0x61, 0x69, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x28, 0x20,
	0x02, 0x28, 0x01, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x3a, 0x05, 0x92, 0x3f,
	0x02, 0x48, 0x7f, 0x22, 0x32, 0x0a, 0x14, 0x45, 0x6d, 0x63, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f,
	0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x43, 0x61, 0x31, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x61, 0x6c, 0x6c, 0x18, 0x14, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x3a,
	0x06, 0x92, 0x3f, 0x03, 0x48, 0x80, 0x01, 0x22, 0x30, 0x0a, 0x12, 0x45, 0x6d, 0x63, 0x5f, 0x49,
	0x6f, 0x5f, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x14, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x04, 0x63, 0x61, 0x6c,
	0x6c, 0x3a, 0x06, 0x92, 0x3f, 0x03, 0x48, 0x81, 0x01, 0x42, 0x2f, 0x5a, 0x2d, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x6b,
	0x69, 0x74, 0x2f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x61, 0x6c, 0x6b, 0x2d, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2d, 0x67, 0x6f,
}

var (
	file_machinetalk_protobuf_canon_proto_rawDescOnce sync.Once
	file_machinetalk_protobuf_canon_proto_rawDescData = file_machinetalk_protobuf_canon_proto_rawDesc
)

func file_machinetalk_protobuf_canon_proto_rawDescGZIP() []byte {
	file_machinetalk_protobuf_canon_proto_rawDescOnce.Do(func() {
		file_machinetalk_protobuf_canon_proto_rawDescData = protoimpl.X.CompressGZIP(file_machinetalk_protobuf_canon_proto_rawDescData)
	})
	return file_machinetalk_protobuf_canon_proto_rawDescData
}

var file_machinetalk_protobuf_canon_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_machinetalk_protobuf_canon_proto_goTypes = []interface{}{
	(*Emc_Traj_Set_G5X)(nil),                 // 0: machinetalk.Emc_Traj_Set_G5x
	(*Emc_Traj_Set_G92)(nil),                 // 1: machinetalk.Emc_Traj_Set_G92
	(*Emc_Traj_Set_Rotation)(nil),            // 2: machinetalk.Emc_Traj_Set_Rotation
	(*Emc_Traj_Linear_Move)(nil),             // 3: machinetalk.Emc_Traj_Linear_Move
	(*Emc_Traj_Probe)(nil),                   // 4: machinetalk.Emc_Traj_Probe
	(*Emc_Traj_Circular_Move)(nil),           // 5: machinetalk.Emc_Traj_Circular_Move
	(*Emc_Traj_Rigid_Tap)(nil),               // 6: machinetalk.Emc_Traj_Rigid_Tap
	(*Emc_Traj_Set_Term_Cond)(nil),           // 7: machinetalk.Emc_Traj_Set_Term_Cond
	(*Emc_Traj_Set_Spindlesync)(nil),         // 8: machinetalk.Emc_Traj_Set_Spindlesync
	(*Emc_Traj_Delay)(nil),                   // 9: machinetalk.Emc_Traj_Delay
	(*Emc_Spindle_On)(nil),                   // 10: machinetalk.Emc_Spindle_On
	(*Emc_Spindle_Speed)(nil),                // 11: machinetalk.Emc_Spindle_Speed
	(*Emc_Spindle_Orient)(nil),               // 12: machinetalk.Emc_Spindle_Orient
	(*Emc_Spindle_Wait_Orient_Complete)(nil), // 13: machinetalk.Emc_Spindle_Wait_Orient_Complete
	(*Emc_Tool_Set_Offset)(nil),              // 14: machinetalk.Emc_Tool_Set_Offset
	(*Emc_Traj_Set_Offset)(nil),              // 15: machinetalk.Emc_Traj_Set_Offset
	(*Emc_Tool_Prepare)(nil),                 // 16: machinetalk.Emc_Tool_Prepare
	(*Emc_Tool_Set_Number)(nil),              // 17: machinetalk.Emc_Tool_Set_Number
	(*Emc_Traj_Set_Fo_Enable)(nil),           // 18: machinetalk.Emc_Traj_Set_Fo_Enable
	(*Emc_Traj_Set_So_Enable)(nil),           // 19: machinetalk.Emc_Traj_Set_So_Enable
	(*Emc_Traj_Set_Fh_Enable)(nil),           // 20: machinetalk.Emc_Traj_Set_Fh_Enable
	(*Emc_Motion_Adaptive)(nil),              // 21: machinetalk.Emc_Motion_Adaptive
	(*Emc_Operator_Display)(nil),             // 22: machinetalk.Emc_Operator_Display
	(*Emc_Operator_Text)(nil),                // 23: machinetalk.Emc_Operator_Text
	(*Emc_Operator_Error)(nil),               // 24: machinetalk.Emc_Operator_Error
	(*Emc_Motion_Set_Dout)(nil),              // 25: machinetalk.Emc_Motion_Set_Dout
	(*Emc_Motion_Set_Aout)(nil),              // 26: machinetalk.Emc_Motion_Set_Aout
	(*Emc_Aux_Input_Wait)(nil),               // 27: machinetalk.Emc_Aux_Input_Wait
	(*Emc_Exec_Plugin_Ca1L)(nil),             // 28: machinetalk.Emc_Exec_Plugin_Ca1l
	(*Emc_Io_Plugin_Call)(nil),               // 29: machinetalk.Emc_Io_Plugin_Call
	(*EmcPose)(nil),                          // 30: machinetalk.EmcPose
	(OriginIndex)(0),                         // 31: machinetalk.OriginIndex
	(MotionType)(0),                          // 32: machinetalk.MotionType
	(*PmCartesian)(nil),                      // 33: machinetalk.PmCartesian
	(TermConditionType)(0),                   // 34: machinetalk.TermConditionType
	(CanonDirection)(0),                      // 35: machinetalk.CanonDirection
	(InputType)(0),                           // 36: machinetalk.InputType
	(WaitType)(0),                            // 37: machinetalk.WaitType
}
var file_machinetalk_protobuf_canon_proto_depIdxs = []int32{
	30, // 0: machinetalk.Emc_Traj_Set_G5x.origin:type_name -> machinetalk.EmcPose
	31, // 1: machinetalk.Emc_Traj_Set_G5x.g5x_index:type_name -> machinetalk.OriginIndex
	30, // 2: machinetalk.Emc_Traj_Set_G92.origin:type_name -> machinetalk.EmcPose
	32, // 3: machinetalk.Emc_Traj_Linear_Move.type:type_name -> machinetalk.MotionType
	30, // 4: machinetalk.Emc_Traj_Linear_Move.end:type_name -> machinetalk.EmcPose
	32, // 5: machinetalk.Emc_Traj_Probe.type:type_name -> machinetalk.MotionType
	30, // 6: machinetalk.Emc_Traj_Probe.pos:type_name -> machinetalk.EmcPose
	32, // 7: machinetalk.Emc_Traj_Circular_Move.type:type_name -> machinetalk.MotionType
	30, // 8: machinetalk.Emc_Traj_Circular_Move.end:type_name -> machinetalk.EmcPose
	33, // 9: machinetalk.Emc_Traj_Circular_Move.center:type_name -> machinetalk.PmCartesian
	33, // 10: machinetalk.Emc_Traj_Circular_Move.normal:type_name -> machinetalk.PmCartesian
	30, // 11: machinetalk.Emc_Traj_Rigid_Tap.pos:type_name -> machinetalk.EmcPose
	34, // 12: machinetalk.Emc_Traj_Set_Term_Cond.cond:type_name -> machinetalk.TermConditionType
	35, // 13: machinetalk.Emc_Spindle_Orient.mode:type_name -> machinetalk.CanonDirection
	30, // 14: machinetalk.Emc_Tool_Set_Offset.offset:type_name -> machinetalk.EmcPose
	30, // 15: machinetalk.Emc_Traj_Set_Offset.offset:type_name -> machinetalk.EmcPose
	36, // 16: machinetalk.Emc_Aux_Input_Wait.input_type:type_name -> machinetalk.InputType
	37, // 17: machinetalk.Emc_Aux_Input_Wait.wait_type:type_name -> machinetalk.WaitType
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_machinetalk_protobuf_canon_proto_init() }
func file_machinetalk_protobuf_canon_proto_init() {
	if File_machinetalk_protobuf_canon_proto != nil {
		return
	}
	file_machinetalk_protobuf_nanopb_proto_init()
	file_machinetalk_protobuf_types_proto_init()
	file_machinetalk_protobuf_emcclass_proto_init()
	file_machinetalk_protobuf_motcmds_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_machinetalk_protobuf_canon_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Emc_Traj_Set_G5X); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machinetalk_protobuf_canon_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Emc_Traj_Set_G92); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machinetalk_protobuf_canon_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Emc_Traj_Set_Rotation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machinetalk_protobuf_canon_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Emc_Traj_Linear_Move); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machinetalk_protobuf_canon_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Emc_Traj_Probe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machinetalk_protobuf_canon_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Emc_Traj_Circular_Move); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machinetalk_protobuf_canon_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Emc_Traj_Rigid_Tap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machinetalk_protobuf_canon_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Emc_Traj_Set_Term_Cond); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machinetalk_protobuf_canon_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Emc_Traj_Set_Spindlesync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machinetalk_protobuf_canon_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Emc_Traj_Delay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machinetalk_protobuf_canon_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Emc_Spindle_On); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machinetalk_protobuf_canon_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Emc_Spindle_Speed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machinetalk_protobuf_canon_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Emc_Spindle_Orient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machinetalk_protobuf_canon_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Emc_Spindle_Wait_Orient_Complete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machinetalk_protobuf_canon_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Emc_Tool_Set_Offset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machinetalk_protobuf_canon_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Emc_Traj_Set_Offset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machinetalk_protobuf_canon_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Emc_Tool_Prepare); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machinetalk_protobuf_canon_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Emc_Tool_Set_Number); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machinetalk_protobuf_canon_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Emc_Traj_Set_Fo_Enable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machinetalk_protobuf_canon_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Emc_Traj_Set_So_Enable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machinetalk_protobuf_canon_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Emc_Traj_Set_Fh_Enable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machinetalk_protobuf_canon_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Emc_Motion_Adaptive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machinetalk_protobuf_canon_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Emc_Operator_Display); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machinetalk_protobuf_canon_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Emc_Operator_Text); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machinetalk_protobuf_canon_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Emc_Operator_Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machinetalk_protobuf_canon_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Emc_Motion_Set_Dout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machinetalk_protobuf_canon_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Emc_Motion_Set_Aout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machinetalk_protobuf_canon_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Emc_Aux_Input_Wait); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machinetalk_protobuf_canon_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Emc_Exec_Plugin_Ca1L); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machinetalk_protobuf_canon_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Emc_Io_Plugin_Call); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_machinetalk_protobuf_canon_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_machinetalk_protobuf_canon_proto_goTypes,
		DependencyIndexes: file_machinetalk_protobuf_canon_proto_depIdxs,
		MessageInfos:      file_machinetalk_protobuf_canon_proto_msgTypes,
	}.Build()
	File_machinetalk_protobuf_canon_proto = out.File
	file_machinetalk_protobuf_canon_proto_rawDesc = nil
	file_machinetalk_protobuf_canon_proto_goTypes = nil
	file_machinetalk_protobuf_canon_proto_depIdxs = nil
}
