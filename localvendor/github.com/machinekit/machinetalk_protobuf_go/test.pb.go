// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: machinetalk/protobuf/test.proto

package machinetalk_protobuf_go

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TestOpType int32

const (
	TestOpType_LINE   TestOpType = 10
	TestOpType_CIRCLE TestOpType = 20
)

// Enum value maps for TestOpType.
var (
	TestOpType_name = map[int32]string{
		10: "LINE",
		20: "CIRCLE",
	}
	TestOpType_value = map[string]int32{
		"LINE":   10,
		"CIRCLE": 20,
	}
)

func (x TestOpType) Enum() *TestOpType {
	p := new(TestOpType)
	*p = x
	return p
}

func (x TestOpType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TestOpType) Descriptor() protoreflect.EnumDescriptor {
	return file_machinetalk_protobuf_test_proto_enumTypes[0].Descriptor()
}

func (TestOpType) Type() protoreflect.EnumType {
	return &file_machinetalk_protobuf_test_proto_enumTypes[0]
}

func (x TestOpType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *TestOpType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = TestOpType(num)
	return nil
}

// Deprecated: Use TestOpType.Descriptor instead.
func (TestOpType) EnumDescriptor() ([]byte, []int) {
	return file_machinetalk_protobuf_test_proto_rawDescGZIP(), []int{0}
}

type Test1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// minimum params to encode line or circle
	Op     *TestOpType  `protobuf:"varint,10,req,name=op,enum=machinetalk.TestOpType" json:"op,omitempty"`
	End    *EmcPose     `protobuf:"bytes,20,req,name=end" json:"end,omitempty"`
	Center *PmCartesian `protobuf:"bytes,30,opt,name=center" json:"center,omitempty"`
	Normal *PmCartesian `protobuf:"bytes,40,opt,name=normal" json:"normal,omitempty"`
	Turn   *int32       `protobuf:"varint,50,opt,name=turn" json:"turn,omitempty"`
}

func (x *Test1) Reset() {
	*x = Test1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetalk_protobuf_test_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Test1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Test1) ProtoMessage() {}

func (x *Test1) ProtoReflect() protoreflect.Message {
	mi := &file_machinetalk_protobuf_test_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Test1.ProtoReflect.Descriptor instead.
func (*Test1) Descriptor() ([]byte, []int) {
	return file_machinetalk_protobuf_test_proto_rawDescGZIP(), []int{0}
}

func (x *Test1) GetOp() TestOpType {
	if x != nil && x.Op != nil {
		return *x.Op
	}
	return TestOpType_LINE
}

func (x *Test1) GetEnd() *EmcPose {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *Test1) GetCenter() *PmCartesian {
	if x != nil {
		return x.Center
	}
	return nil
}

func (x *Test1) GetNormal() *PmCartesian {
	if x != nil {
		return x.Normal
	}
	return nil
}

func (x *Test1) GetTurn() int32 {
	if x != nil && x.Turn != nil {
		return *x.Turn
	}
	return 0
}

type Test2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Test2) Reset() {
	*x = Test2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetalk_protobuf_test_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Test2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Test2) ProtoMessage() {}

func (x *Test2) ProtoReflect() protoreflect.Message {
	mi := &file_machinetalk_protobuf_test_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Test2.ProtoReflect.Descriptor instead.
func (*Test2) Descriptor() ([]byte, []int) {
	return file_machinetalk_protobuf_test_proto_rawDescGZIP(), []int{1}
}

type Test3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Test3) Reset() {
	*x = Test3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetalk_protobuf_test_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Test3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Test3) ProtoMessage() {}

func (x *Test3) ProtoReflect() protoreflect.Message {
	mi := &file_machinetalk_protobuf_test_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Test3.ProtoReflect.Descriptor instead.
func (*Test3) Descriptor() ([]byte, []int) {
	return file_machinetalk_protobuf_test_proto_rawDescGZIP(), []int{2}
}

var File_machinetalk_protobuf_test_proto protoreflect.FileDescriptor

var file_machinetalk_protobuf_test_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x61, 0x6c, 0x6b, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0b, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x61, 0x6c, 0x6b, 0x1a, 0x23,
	0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x61, 0x6c, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x63, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x61, 0x6c, 0x6b,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x6e, 0x61, 0x6e, 0x6f, 0x70, 0x62,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd8, 0x01, 0x0a, 0x05, 0x54, 0x65, 0x73, 0x74, 0x31,
	0x12, 0x27, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x0a, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x61, 0x6c, 0x6b, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x4f,
	0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x02, 0x6f, 0x70, 0x12, 0x26, 0x0a, 0x03, 0x65, 0x6e, 0x64,
	0x18, 0x14, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x74, 0x61, 0x6c, 0x6b, 0x2e, 0x45, 0x6d, 0x63, 0x50, 0x6f, 0x73, 0x65, 0x52, 0x03, 0x65, 0x6e,
	0x64, 0x12, 0x30, 0x0a, 0x06, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x61, 0x6c, 0x6b, 0x2e,
	0x50, 0x6d, 0x43, 0x61, 0x72, 0x74, 0x65, 0x73, 0x69, 0x61, 0x6e, 0x52, 0x06, 0x63, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x06, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x18, 0x28, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x61, 0x6c,
	0x6b, 0x2e, 0x50, 0x6d, 0x43, 0x61, 0x72, 0x74, 0x65, 0x73, 0x69, 0x61, 0x6e, 0x52, 0x06, 0x6e,
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x75, 0x72, 0x6e, 0x18, 0x32, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x75, 0x72, 0x6e, 0x3a, 0x06, 0x92, 0x3f, 0x03, 0x48, 0x94,
	0x0a, 0x22, 0x0f, 0x0a, 0x05, 0x54, 0x65, 0x73, 0x74, 0x32, 0x3a, 0x06, 0x92, 0x3f, 0x03, 0x48,
	0x95, 0x0a, 0x22, 0x0f, 0x0a, 0x05, 0x54, 0x65, 0x73, 0x74, 0x33, 0x3a, 0x06, 0x92, 0x3f, 0x03,
	0x48, 0x96, 0x0a, 0x2a, 0x22, 0x0a, 0x0a, 0x54, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x0a, 0x12, 0x0a, 0x0a, 0x06, 0x43,
	0x49, 0x52, 0x43, 0x4c, 0x45, 0x10, 0x14, 0x42, 0x2f, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x6b, 0x69, 0x74,
	0x2f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x61, 0x6c, 0x6b, 0x2d, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2d, 0x67, 0x6f,
}

var (
	file_machinetalk_protobuf_test_proto_rawDescOnce sync.Once
	file_machinetalk_protobuf_test_proto_rawDescData = file_machinetalk_protobuf_test_proto_rawDesc
)

func file_machinetalk_protobuf_test_proto_rawDescGZIP() []byte {
	file_machinetalk_protobuf_test_proto_rawDescOnce.Do(func() {
		file_machinetalk_protobuf_test_proto_rawDescData = protoimpl.X.CompressGZIP(file_machinetalk_protobuf_test_proto_rawDescData)
	})
	return file_machinetalk_protobuf_test_proto_rawDescData
}

var file_machinetalk_protobuf_test_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_machinetalk_protobuf_test_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_machinetalk_protobuf_test_proto_goTypes = []interface{}{
	(TestOpType)(0),     // 0: machinetalk.TestOpType
	(*Test1)(nil),       // 1: machinetalk.Test1
	(*Test2)(nil),       // 2: machinetalk.Test2
	(*Test3)(nil),       // 3: machinetalk.Test3
	(*EmcPose)(nil),     // 4: machinetalk.EmcPose
	(*PmCartesian)(nil), // 5: machinetalk.PmCartesian
}
var file_machinetalk_protobuf_test_proto_depIdxs = []int32{
	0, // 0: machinetalk.Test1.op:type_name -> machinetalk.TestOpType
	4, // 1: machinetalk.Test1.end:type_name -> machinetalk.EmcPose
	5, // 2: machinetalk.Test1.center:type_name -> machinetalk.PmCartesian
	5, // 3: machinetalk.Test1.normal:type_name -> machinetalk.PmCartesian
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_machinetalk_protobuf_test_proto_init() }
func file_machinetalk_protobuf_test_proto_init() {
	if File_machinetalk_protobuf_test_proto != nil {
		return
	}
	file_machinetalk_protobuf_emcclass_proto_init()
	file_machinetalk_protobuf_nanopb_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_machinetalk_protobuf_test_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Test1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machinetalk_protobuf_test_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Test2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machinetalk_protobuf_test_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Test3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_machinetalk_protobuf_test_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_machinetalk_protobuf_test_proto_goTypes,
		DependencyIndexes: file_machinetalk_protobuf_test_proto_depIdxs,
		EnumInfos:         file_machinetalk_protobuf_test_proto_enumTypes,
		MessageInfos:      file_machinetalk_protobuf_test_proto_msgTypes,
	}.Build()
	File_machinetalk_protobuf_test_proto = out.File
	file_machinetalk_protobuf_test_proto_rawDesc = nil
	file_machinetalk_protobuf_test_proto_goTypes = nil
	file_machinetalk_protobuf_test_proto_depIdxs = nil
}
