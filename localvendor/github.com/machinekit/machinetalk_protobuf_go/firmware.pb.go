// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: machinetalk/protobuf/firmware.proto

// see README.msgid
// msgid base: 380

package machinetalk_protobuf_go

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

/// describes a connector
type Connector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	/// will appear in the HAL name
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	/// number of pins
	Pins *int32 `protobuf:"fixed32,2,opt,name=pins" json:"pins,omitempty"`
}

func (x *Connector) Reset() {
	*x = Connector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetalk_protobuf_firmware_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Connector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Connector) ProtoMessage() {}

func (x *Connector) ProtoReflect() protoreflect.Message {
	mi := &file_machinetalk_protobuf_firmware_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Connector.ProtoReflect.Descriptor instead.
func (*Connector) Descriptor() ([]byte, []int) {
	return file_machinetalk_protobuf_firmware_proto_rawDescGZIP(), []int{0}
}

func (x *Connector) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Connector) GetPins() int32 {
	if x != nil && x.Pins != nil {
		return *x.Pins
	}
	return 0
}

type Firmware struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	/// the machinekit/socfpga build SHA
	BuildSha *string `protobuf:"bytes,1,opt,name=build_sha,json=buildSha" json:"build_sha,omitempty"`
	/// sets hm2_lowlevel_io_struct.fpga_part_number
	FpgaPartNumber *string `protobuf:"bytes,2,opt,name=fpga_part_number,json=fpgaPartNumber" json:"fpga_part_number,omitempty"`
	/// sets hm2_lowlevel_io_struct.num_ioport_connectors, ioport_connector_name, pins_per_connector
	Connector []*Connector `protobuf:"bytes,3,rep,name=connector" json:"connector,omitempty"`
	/// sets hm2_lowlevel_io_struct.num_leds
	NumLeds *int32 `protobuf:"fixed32,4,opt,name=num_leds,json=numLeds" json:"num_leds,omitempty"`
	/// sets hm2_lowlevel_io_struct.num_leds
	BoardName *string `protobuf:"bytes,5,opt,name=board_name,json=boardName" json:"board_name,omitempty"`
	/// descriptive text, uninterpreted - use for log message if present
	Comment *string `protobuf:"bytes,6,opt,name=comment" json:"comment,omitempty"`
}

func (x *Firmware) Reset() {
	*x = Firmware{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetalk_protobuf_firmware_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Firmware) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Firmware) ProtoMessage() {}

func (x *Firmware) ProtoReflect() protoreflect.Message {
	mi := &file_machinetalk_protobuf_firmware_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Firmware.ProtoReflect.Descriptor instead.
func (*Firmware) Descriptor() ([]byte, []int) {
	return file_machinetalk_protobuf_firmware_proto_rawDescGZIP(), []int{1}
}

func (x *Firmware) GetBuildSha() string {
	if x != nil && x.BuildSha != nil {
		return *x.BuildSha
	}
	return ""
}

func (x *Firmware) GetFpgaPartNumber() string {
	if x != nil && x.FpgaPartNumber != nil {
		return *x.FpgaPartNumber
	}
	return ""
}

func (x *Firmware) GetConnector() []*Connector {
	if x != nil {
		return x.Connector
	}
	return nil
}

func (x *Firmware) GetNumLeds() int32 {
	if x != nil && x.NumLeds != nil {
		return *x.NumLeds
	}
	return 0
}

func (x *Firmware) GetBoardName() string {
	if x != nil && x.BoardName != nil {
		return *x.BoardName
	}
	return ""
}

func (x *Firmware) GetComment() string {
	if x != nil && x.Comment != nil {
		return *x.Comment
	}
	return ""
}

var File_machinetalk_protobuf_firmware_proto protoreflect.FileDescriptor

var file_machinetalk_protobuf_firmware_proto_rawDesc = []byte{
	0x0a, 0x23, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x61, 0x6c, 0x6b, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x61,
	0x6c, 0x6b, 0x1a, 0x21, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x61, 0x6c, 0x6b, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x6e, 0x61, 0x6e, 0x6f, 0x70, 0x62, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x42, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x12, 0x19, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x05, 0x92, 0x3f, 0x02, 0x08, 0x14, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x69, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0f, 0x52, 0x04, 0x70, 0x69, 0x6e,
	0x73, 0x3a, 0x06, 0x92, 0x3f, 0x03, 0x48, 0xfc, 0x02, 0x22, 0x86, 0x02, 0x0a, 0x08, 0x46, 0x69,
	0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x12, 0x22, 0x0a, 0x09, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f,
	0x73, 0x68, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0x92, 0x3f, 0x02, 0x08, 0x28,
	0x52, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x68, 0x61, 0x12, 0x2f, 0x0a, 0x10, 0x66, 0x70,
	0x67, 0x61, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0x92, 0x3f, 0x02, 0x08, 0x14, 0x52, 0x0e, 0x66, 0x70, 0x67,
	0x61, 0x50, 0x61, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x09, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x61, 0x6c, 0x6b, 0x2e, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x42, 0x05, 0x92, 0x3f, 0x02, 0x10, 0x10, 0x52, 0x09, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x75, 0x6d, 0x5f,
	0x6c, 0x65, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0f, 0x52, 0x07, 0x6e, 0x75, 0x6d, 0x4c,
	0x65, 0x64, 0x73, 0x12, 0x24, 0x0a, 0x0a, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0x92, 0x3f, 0x02, 0x08, 0x1e, 0x52, 0x09,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0x92, 0x3f, 0x02, 0x08,
	0x50, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x3a, 0x06, 0x92, 0x3f, 0x03, 0x48,
	0x81, 0x03, 0x42, 0x2f, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x6b, 0x69, 0x74, 0x2f, 0x6d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x74, 0x61, 0x6c, 0x6b, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2d, 0x67, 0x6f,
}

var (
	file_machinetalk_protobuf_firmware_proto_rawDescOnce sync.Once
	file_machinetalk_protobuf_firmware_proto_rawDescData = file_machinetalk_protobuf_firmware_proto_rawDesc
)

func file_machinetalk_protobuf_firmware_proto_rawDescGZIP() []byte {
	file_machinetalk_protobuf_firmware_proto_rawDescOnce.Do(func() {
		file_machinetalk_protobuf_firmware_proto_rawDescData = protoimpl.X.CompressGZIP(file_machinetalk_protobuf_firmware_proto_rawDescData)
	})
	return file_machinetalk_protobuf_firmware_proto_rawDescData
}

var file_machinetalk_protobuf_firmware_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_machinetalk_protobuf_firmware_proto_goTypes = []interface{}{
	(*Connector)(nil), // 0: machinetalk.Connector
	(*Firmware)(nil),  // 1: machinetalk.Firmware
}
var file_machinetalk_protobuf_firmware_proto_depIdxs = []int32{
	0, // 0: machinetalk.Firmware.connector:type_name -> machinetalk.Connector
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_machinetalk_protobuf_firmware_proto_init() }
func file_machinetalk_protobuf_firmware_proto_init() {
	if File_machinetalk_protobuf_firmware_proto != nil {
		return
	}
	file_machinetalk_protobuf_nanopb_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_machinetalk_protobuf_firmware_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Connector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machinetalk_protobuf_firmware_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Firmware); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_machinetalk_protobuf_firmware_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_machinetalk_protobuf_firmware_proto_goTypes,
		DependencyIndexes: file_machinetalk_protobuf_firmware_proto_depIdxs,
		MessageInfos:      file_machinetalk_protobuf_firmware_proto_msgTypes,
	}.Build()
	File_machinetalk_protobuf_firmware_proto = out.File
	file_machinetalk_protobuf_firmware_proto_rawDesc = nil
	file_machinetalk_protobuf_firmware_proto_goTypes = nil
	file_machinetalk_protobuf_firmware_proto_depIdxs = nil
}
