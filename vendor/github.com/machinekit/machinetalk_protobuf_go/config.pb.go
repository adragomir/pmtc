// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: machinetalk/protobuf/config.proto

// see README.msgid
// msgid base: 200

package machinetalk_protobuf_go

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ApplicationType int32

const (
	ApplicationType_QT5_QML    ApplicationType = 1
	ApplicationType_GLADEVCP   ApplicationType = 2
	ApplicationType_JAVASCRIPT ApplicationType = 3
)

// Enum value maps for ApplicationType.
var (
	ApplicationType_name = map[int32]string{
		1: "QT5_QML",
		2: "GLADEVCP",
		3: "JAVASCRIPT",
	}
	ApplicationType_value = map[string]int32{
		"QT5_QML":    1,
		"GLADEVCP":   2,
		"JAVASCRIPT": 3,
	}
)

func (x ApplicationType) Enum() *ApplicationType {
	p := new(ApplicationType)
	*p = x
	return p
}

func (x ApplicationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApplicationType) Descriptor() protoreflect.EnumDescriptor {
	return file_machinetalk_protobuf_config_proto_enumTypes[0].Descriptor()
}

func (ApplicationType) Type() protoreflect.EnumType {
	return &file_machinetalk_protobuf_config_proto_enumTypes[0]
}

func (x ApplicationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ApplicationType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ApplicationType(num)
	return nil
}

// Deprecated: Use ApplicationType.Descriptor instead.
func (ApplicationType) EnumDescriptor() ([]byte, []int) {
	return file_machinetalk_protobuf_config_proto_rawDescGZIP(), []int{0}
}

type FileContent int32

const (
	FileContent_CLEARTEXT FileContent = 1
	FileContent_ZLIB      FileContent = 2
)

// Enum value maps for FileContent.
var (
	FileContent_name = map[int32]string{
		1: "CLEARTEXT",
		2: "ZLIB",
	}
	FileContent_value = map[string]int32{
		"CLEARTEXT": 1,
		"ZLIB":      2,
	}
)

func (x FileContent) Enum() *FileContent {
	p := new(FileContent)
	*p = x
	return p
}

func (x FileContent) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileContent) Descriptor() protoreflect.EnumDescriptor {
	return file_machinetalk_protobuf_config_proto_enumTypes[1].Descriptor()
}

func (FileContent) Type() protoreflect.EnumType {
	return &file_machinetalk_protobuf_config_proto_enumTypes[1]
}

func (x FileContent) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *FileContent) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = FileContent(num)
	return nil
}

// Deprecated: Use FileContent.Descriptor instead.
func (FileContent) EnumDescriptor() ([]byte, []int) {
	return file_machinetalk_protobuf_config_proto_rawDescGZIP(), []int{1}
}

type File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     *string      `protobuf:"bytes,1,req,name=name" json:"name,omitempty"` // flat for now
	Encoding *FileContent `protobuf:"varint,2,req,name=encoding,enum=machinetalk.FileContent" json:"encoding,omitempty"`
	Blob     []byte       `protobuf:"bytes,3,opt,name=blob" json:"blob,omitempty"`
}

func (x *File) Reset() {
	*x = File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetalk_protobuf_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_machinetalk_protobuf_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_machinetalk_protobuf_config_proto_rawDescGZIP(), []int{0}
}

func (x *File) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *File) GetEncoding() FileContent {
	if x != nil && x.Encoding != nil {
		return *x.Encoding
	}
	return FileContent_CLEARTEXT
}

func (x *File) GetBlob() []byte {
	if x != nil {
		return x.Blob
	}
	return nil
}

type Application struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        *string          `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`               // unique key
	Description *string          `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"` // comment
	Type        *ApplicationType `protobuf:"varint,3,opt,name=type,enum=machinetalk.ApplicationType" json:"type,omitempty"`
	Weburi      *string          `protobuf:"bytes,4,opt,name=weburi" json:"weburi,omitempty"` // for type == JAVASCRIPT
	File        []*File          `protobuf:"bytes,5,rep,name=file" json:"file,omitempty"`     // config params go here
}

func (x *Application) Reset() {
	*x = Application{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetalk_protobuf_config_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Application) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application) ProtoMessage() {}

func (x *Application) ProtoReflect() protoreflect.Message {
	mi := &file_machinetalk_protobuf_config_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Application.ProtoReflect.Descriptor instead.
func (*Application) Descriptor() ([]byte, []int) {
	return file_machinetalk_protobuf_config_proto_rawDescGZIP(), []int{1}
}

func (x *Application) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Application) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Application) GetType() ApplicationType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ApplicationType_QT5_QML
}

func (x *Application) GetWeburi() string {
	if x != nil && x.Weburi != nil {
		return *x.Weburi
	}
	return ""
}

func (x *Application) GetFile() []*File {
	if x != nil {
		return x.File
	}
	return nil
}

type StdoutLine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index *int32  `protobuf:"varint,1,req,name=index" json:"index,omitempty"`
	Line  *string `protobuf:"bytes,2,opt,name=line" json:"line,omitempty"`
}

func (x *StdoutLine) Reset() {
	*x = StdoutLine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetalk_protobuf_config_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StdoutLine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StdoutLine) ProtoMessage() {}

func (x *StdoutLine) ProtoReflect() protoreflect.Message {
	mi := &file_machinetalk_protobuf_config_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StdoutLine.ProtoReflect.Descriptor instead.
func (*StdoutLine) Descriptor() ([]byte, []int) {
	return file_machinetalk_protobuf_config_proto_rawDescGZIP(), []int{2}
}

func (x *StdoutLine) GetIndex() int32 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

func (x *StdoutLine) GetLine() string {
	if x != nil && x.Line != nil {
		return *x.Line
	}
	return ""
}

type MachineInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type         *string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`                 // type of the machine, e.g. FDM, CNC, ...
	Manufacturer *string `protobuf:"bytes,2,opt,name=manufacturer" json:"manufacturer,omitempty"` // manufacturer of the machine
	Model        *string `protobuf:"bytes,3,opt,name=model" json:"model,omitempty"`               // machine model
	Variant      *string `protobuf:"bytes,4,opt,name=variant" json:"variant,omitempty"`           // variant of the machine
}

func (x *MachineInfo) Reset() {
	*x = MachineInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetalk_protobuf_config_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MachineInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineInfo) ProtoMessage() {}

func (x *MachineInfo) ProtoReflect() protoreflect.Message {
	mi := &file_machinetalk_protobuf_config_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineInfo.ProtoReflect.Descriptor instead.
func (*MachineInfo) Descriptor() ([]byte, []int) {
	return file_machinetalk_protobuf_config_proto_rawDescGZIP(), []int{3}
}

func (x *MachineInfo) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *MachineInfo) GetManufacturer() string {
	if x != nil && x.Manufacturer != nil {
		return *x.Manufacturer
	}
	return ""
}

func (x *MachineInfo) GetModel() string {
	if x != nil && x.Model != nil {
		return *x.Model
	}
	return ""
}

func (x *MachineInfo) GetVariant() string {
	if x != nil && x.Variant != nil {
		return *x.Variant
	}
	return ""
}

// message for mklauncher
type Launcher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index       *int32        `protobuf:"varint,1,req,name=index" json:"index,omitempty"`             // index is necessary to access repeated
	Name        *string       `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`                // visible name
	Description *string       `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`  // description of the config
	Image       *File         `protobuf:"bytes,4,opt,name=image" json:"image,omitempty"`              // image representing the configuration
	Info        *MachineInfo  `protobuf:"bytes,5,opt,name=info" json:"info,omitempty"`                // information about the machine
	Running     *bool         `protobuf:"varint,6,opt,name=running" json:"running,omitempty"`         // indicates whether the config is running or not
	Terminating *bool         `protobuf:"varint,7,opt,name=terminating" json:"terminating,omitempty"` // indicates if a terminations signal was sent to the process
	Command     *string       `protobuf:"bytes,8,opt,name=command" json:"command,omitempty"`          // configuration start command
	Shell       *bool         `protobuf:"varint,9,opt,name=shell" json:"shell,omitempty"`             // if the configuration command is executed in a shell
	Output      []*StdoutLine `protobuf:"bytes,10,rep,name=output" json:"output,omitempty"`           // stdout output of the command
	Returncode  *int32        `protobuf:"varint,11,opt,name=returncode" json:"returncode,omitempty"`  // return code of the command
	Workdir     *string       `protobuf:"bytes,12,opt,name=workdir" json:"workdir,omitempty"`         // working dir of the command
	Priority    *uint32       `protobuf:"varint,13,opt,name=priority" json:"priority,omitempty"`      // priority for sorting, smaller means lower priority
	Importance  *uint32       `protobuf:"varint,14,opt,name=importance" json:"importance,omitempty"`  // importance set by the user, smaller means less important
}

func (x *Launcher) Reset() {
	*x = Launcher{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetalk_protobuf_config_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Launcher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Launcher) ProtoMessage() {}

func (x *Launcher) ProtoReflect() protoreflect.Message {
	mi := &file_machinetalk_protobuf_config_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Launcher.ProtoReflect.Descriptor instead.
func (*Launcher) Descriptor() ([]byte, []int) {
	return file_machinetalk_protobuf_config_proto_rawDescGZIP(), []int{4}
}

func (x *Launcher) GetIndex() int32 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

func (x *Launcher) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Launcher) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Launcher) GetImage() *File {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *Launcher) GetInfo() *MachineInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *Launcher) GetRunning() bool {
	if x != nil && x.Running != nil {
		return *x.Running
	}
	return false
}

func (x *Launcher) GetTerminating() bool {
	if x != nil && x.Terminating != nil {
		return *x.Terminating
	}
	return false
}

func (x *Launcher) GetCommand() string {
	if x != nil && x.Command != nil {
		return *x.Command
	}
	return ""
}

func (x *Launcher) GetShell() bool {
	if x != nil && x.Shell != nil {
		return *x.Shell
	}
	return false
}

func (x *Launcher) GetOutput() []*StdoutLine {
	if x != nil {
		return x.Output
	}
	return nil
}

func (x *Launcher) GetReturncode() int32 {
	if x != nil && x.Returncode != nil {
		return *x.Returncode
	}
	return 0
}

func (x *Launcher) GetWorkdir() string {
	if x != nil && x.Workdir != nil {
		return *x.Workdir
	}
	return ""
}

func (x *Launcher) GetPriority() uint32 {
	if x != nil && x.Priority != nil {
		return *x.Priority
	}
	return 0
}

func (x *Launcher) GetImportance() uint32 {
	if x != nil && x.Importance != nil {
		return *x.Importance
	}
	return 0
}

var File_machinetalk_protobuf_config_proto protoreflect.FileDescriptor

var file_machinetalk_protobuf_config_proto_rawDesc = []byte{
	0x0a, 0x21, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x61, 0x6c, 0x6b, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x61, 0x6c, 0x6b,
	0x1a, 0x21, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x61, 0x6c, 0x6b, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x6e, 0x61, 0x6e, 0x6f, 0x70, 0x62, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x6c, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x34, 0x0a, 0x08, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x0e, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x61, 0x6c, 0x6b, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x65, 0x6e, 0x63,
	0x6f, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6c, 0x6f, 0x62, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6c, 0x6f, 0x62, 0x3a, 0x06, 0x92, 0x3f, 0x03, 0x48, 0xc8,
	0x01, 0x22, 0xbc, 0x01, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74,
	0x61, 0x6c, 0x6b, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x62,
	0x75, 0x72, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x65, 0x62, 0x75, 0x72,
	0x69, 0x12, 0x25, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x61, 0x6c, 0x6b, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x3a, 0x06, 0x92, 0x3f, 0x03, 0x48, 0xc9, 0x01,
	0x22, 0x3e, 0x0a, 0x0a, 0x53, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x3a, 0x06, 0x92, 0x3f, 0x03, 0x48, 0xca, 0x01,
	0x22, 0x7d, 0x0a, 0x0b, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66,
	0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x3a, 0x06, 0x92, 0x3f, 0x03, 0x48, 0xcb, 0x01, 0x22,
	0xc8, 0x03, 0x0a, 0x08, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x74, 0x61, 0x6c, 0x6b, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x2c, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x61, 0x6c, 0x6b, 0x2e, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x68, 0x65, 0x6c, 0x6c, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x73, 0x68, 0x65, 0x6c, 0x6c, 0x12, 0x2f, 0x0a, 0x06, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x61, 0x6c, 0x6b, 0x2e, 0x53, 0x74, 0x64, 0x6f, 0x75, 0x74,
	0x4c, 0x69, 0x6e, 0x65, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x77, 0x6f, 0x72, 0x6b, 0x64, 0x69, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77,
	0x6f, 0x72, 0x6b, 0x64, 0x69, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x3a, 0x06, 0x92, 0x3f, 0x03, 0x48, 0xcc, 0x01, 0x2a, 0x3c, 0x0a, 0x0f, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a,
	0x07, 0x51, 0x54, 0x35, 0x5f, 0x51, 0x4d, 0x4c, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x47, 0x4c,
	0x41, 0x44, 0x45, 0x56, 0x43, 0x50, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x4a, 0x41, 0x56, 0x41,
	0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x10, 0x03, 0x2a, 0x26, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4c, 0x45, 0x41, 0x52,
	0x54, 0x45, 0x58, 0x54, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x5a, 0x4c, 0x49, 0x42, 0x10, 0x02,
	0x42, 0x2f, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x6b, 0x69, 0x74, 0x2f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x74, 0x61, 0x6c, 0x6b, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2d, 0x67,
	0x6f,
}

var (
	file_machinetalk_protobuf_config_proto_rawDescOnce sync.Once
	file_machinetalk_protobuf_config_proto_rawDescData = file_machinetalk_protobuf_config_proto_rawDesc
)

func file_machinetalk_protobuf_config_proto_rawDescGZIP() []byte {
	file_machinetalk_protobuf_config_proto_rawDescOnce.Do(func() {
		file_machinetalk_protobuf_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_machinetalk_protobuf_config_proto_rawDescData)
	})
	return file_machinetalk_protobuf_config_proto_rawDescData
}

var file_machinetalk_protobuf_config_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_machinetalk_protobuf_config_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_machinetalk_protobuf_config_proto_goTypes = []interface{}{
	(ApplicationType)(0), // 0: machinetalk.ApplicationType
	(FileContent)(0),     // 1: machinetalk.FileContent
	(*File)(nil),         // 2: machinetalk.File
	(*Application)(nil),  // 3: machinetalk.Application
	(*StdoutLine)(nil),   // 4: machinetalk.StdoutLine
	(*MachineInfo)(nil),  // 5: machinetalk.MachineInfo
	(*Launcher)(nil),     // 6: machinetalk.Launcher
}
var file_machinetalk_protobuf_config_proto_depIdxs = []int32{
	1, // 0: machinetalk.File.encoding:type_name -> machinetalk.FileContent
	0, // 1: machinetalk.Application.type:type_name -> machinetalk.ApplicationType
	2, // 2: machinetalk.Application.file:type_name -> machinetalk.File
	2, // 3: machinetalk.Launcher.image:type_name -> machinetalk.File
	5, // 4: machinetalk.Launcher.info:type_name -> machinetalk.MachineInfo
	4, // 5: machinetalk.Launcher.output:type_name -> machinetalk.StdoutLine
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_machinetalk_protobuf_config_proto_init() }
func file_machinetalk_protobuf_config_proto_init() {
	if File_machinetalk_protobuf_config_proto != nil {
		return
	}
	file_machinetalk_protobuf_nanopb_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_machinetalk_protobuf_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machinetalk_protobuf_config_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Application); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machinetalk_protobuf_config_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StdoutLine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machinetalk_protobuf_config_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MachineInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machinetalk_protobuf_config_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Launcher); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_machinetalk_protobuf_config_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_machinetalk_protobuf_config_proto_goTypes,
		DependencyIndexes: file_machinetalk_protobuf_config_proto_depIdxs,
		EnumInfos:         file_machinetalk_protobuf_config_proto_enumTypes,
		MessageInfos:      file_machinetalk_protobuf_config_proto_msgTypes,
	}.Build()
	File_machinetalk_protobuf_config_proto = out.File
	file_machinetalk_protobuf_config_proto_rawDesc = nil
	file_machinetalk_protobuf_config_proto_goTypes = nil
	file_machinetalk_protobuf_config_proto_depIdxs = nil
}
