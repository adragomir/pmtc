// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: machinetalk/protobuf/ros.proto

package machinetalk_protobuf_go

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// http://docs.ros.org/jade/api/std_msgs/html/msg/Header.html
type Time struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Secs  *uint32 `protobuf:"varint,1,opt,name=secs" json:"secs,omitempty"`
	Nsecs *uint32 `protobuf:"varint,2,opt,name=nsecs" json:"nsecs,omitempty"`
}

func (x *Time) Reset() {
	*x = Time{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetalk_protobuf_ros_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Time) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Time) ProtoMessage() {}

func (x *Time) ProtoReflect() protoreflect.Message {
	mi := &file_machinetalk_protobuf_ros_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Time.ProtoReflect.Descriptor instead.
func (*Time) Descriptor() ([]byte, []int) {
	return file_machinetalk_protobuf_ros_proto_rawDescGZIP(), []int{0}
}

func (x *Time) GetSecs() uint32 {
	if x != nil && x.Secs != nil {
		return *x.Secs
	}
	return 0
}

func (x *Time) GetNsecs() uint32 {
	if x != nil && x.Nsecs != nil {
		return *x.Nsecs
	}
	return 0
}

type Header struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seq     *uint32 `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	Stamp   *Time   `protobuf:"bytes,2,opt,name=stamp" json:"stamp,omitempty"`
	FrameId *string `protobuf:"bytes,3,opt,name=frame_id,json=frameId" json:"frame_id,omitempty"`
}

func (x *Header) Reset() {
	*x = Header{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetalk_protobuf_ros_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Header) ProtoMessage() {}

func (x *Header) ProtoReflect() protoreflect.Message {
	mi := &file_machinetalk_protobuf_ros_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Header.ProtoReflect.Descriptor instead.
func (*Header) Descriptor() ([]byte, []int) {
	return file_machinetalk_protobuf_ros_proto_rawDescGZIP(), []int{1}
}

func (x *Header) GetSeq() uint32 {
	if x != nil && x.Seq != nil {
		return *x.Seq
	}
	return 0
}

func (x *Header) GetStamp() *Time {
	if x != nil {
		return x.Stamp
	}
	return nil
}

func (x *Header) GetFrameId() string {
	if x != nil && x.FrameId != nil {
		return *x.FrameId
	}
	return ""
}

// http://docs.ros.org/indigo/api/trajectory_msgs/html/msg/JointTrajectoryPoint.html
type JointTrajectoryPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Positions     []float64 `protobuf:"fixed64,1,rep,name=positions" json:"positions,omitempty"`
	Velocities    []float64 `protobuf:"fixed64,2,rep,name=velocities" json:"velocities,omitempty"`
	Accelerations []float64 `protobuf:"fixed64,3,rep,name=accelerations" json:"accelerations,omitempty"`
	Effort        []float64 `protobuf:"fixed64,4,rep,name=effort" json:"effort,omitempty"`
	TimeFromStart *float64  `protobuf:"fixed64,5,opt,name=time_from_start,json=timeFromStart" json:"time_from_start,omitempty"`
	Duration      *float64  `protobuf:"fixed64,7,opt,name=duration" json:"duration,omitempty"` // of this segment, secs
	Serial        *uint32   `protobuf:"varint,8,opt,name=serial" json:"serial,omitempty"`      // segment being worked on
}

func (x *JointTrajectoryPoint) Reset() {
	*x = JointTrajectoryPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetalk_protobuf_ros_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JointTrajectoryPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JointTrajectoryPoint) ProtoMessage() {}

func (x *JointTrajectoryPoint) ProtoReflect() protoreflect.Message {
	mi := &file_machinetalk_protobuf_ros_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JointTrajectoryPoint.ProtoReflect.Descriptor instead.
func (*JointTrajectoryPoint) Descriptor() ([]byte, []int) {
	return file_machinetalk_protobuf_ros_proto_rawDescGZIP(), []int{2}
}

func (x *JointTrajectoryPoint) GetPositions() []float64 {
	if x != nil {
		return x.Positions
	}
	return nil
}

func (x *JointTrajectoryPoint) GetVelocities() []float64 {
	if x != nil {
		return x.Velocities
	}
	return nil
}

func (x *JointTrajectoryPoint) GetAccelerations() []float64 {
	if x != nil {
		return x.Accelerations
	}
	return nil
}

func (x *JointTrajectoryPoint) GetEffort() []float64 {
	if x != nil {
		return x.Effort
	}
	return nil
}

func (x *JointTrajectoryPoint) GetTimeFromStart() float64 {
	if x != nil && x.TimeFromStart != nil {
		return *x.TimeFromStart
	}
	return 0
}

func (x *JointTrajectoryPoint) GetDuration() float64 {
	if x != nil && x.Duration != nil {
		return *x.Duration
	}
	return 0
}

func (x *JointTrajectoryPoint) GetSerial() uint32 {
	if x != nil && x.Serial != nil {
		return *x.Serial
	}
	return 0
}

// http://docs.ros.org/jade/api/trajectory_msgs/html/msg/JointTrajectory.html
type JointTrajectory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header     *Header                 `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	JointNames []string                `protobuf:"bytes,2,rep,name=joint_names,json=jointNames" json:"joint_names,omitempty"`
	Points     []*JointTrajectoryPoint `protobuf:"bytes,3,rep,name=points" json:"points,omitempty"`
}

func (x *JointTrajectory) Reset() {
	*x = JointTrajectory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetalk_protobuf_ros_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JointTrajectory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JointTrajectory) ProtoMessage() {}

func (x *JointTrajectory) ProtoReflect() protoreflect.Message {
	mi := &file_machinetalk_protobuf_ros_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JointTrajectory.ProtoReflect.Descriptor instead.
func (*JointTrajectory) Descriptor() ([]byte, []int) {
	return file_machinetalk_protobuf_ros_proto_rawDescGZIP(), []int{3}
}

func (x *JointTrajectory) GetHeader() *Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *JointTrajectory) GetJointNames() []string {
	if x != nil {
		return x.JointNames
	}
	return nil
}

func (x *JointTrajectory) GetPoints() []*JointTrajectoryPoint {
	if x != nil {
		return x.Points
	}
	return nil
}

var File_machinetalk_protobuf_ros_proto protoreflect.FileDescriptor

var file_machinetalk_protobuf_ros_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x61, 0x6c, 0x6b, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x72, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0b, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x61, 0x6c, 0x6b, 0x1a, 0x21, 0x6d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x61, 0x6c, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x6e, 0x61, 0x6e, 0x6f, 0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x38, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x63, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x65, 0x63, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x6e, 0x73, 0x65, 0x63, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x73, 0x65,
	0x63, 0x73, 0x3a, 0x06, 0x92, 0x3f, 0x03, 0x48, 0xf3, 0x02, 0x22, 0x6d, 0x0a, 0x06, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74,
	0x61, 0x6c, 0x6b, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x20, 0x0a, 0x08, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x05, 0x92, 0x3f, 0x02, 0x08, 0x14, 0x52, 0x07, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x49,
	0x64, 0x3a, 0x06, 0x92, 0x3f, 0x03, 0x48, 0xf4, 0x02, 0x22, 0x92, 0x02, 0x0a, 0x14, 0x4a, 0x6f,
	0x69, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x23, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x01, 0x42, 0x05, 0x92, 0x3f, 0x02, 0x10, 0x0a, 0x52, 0x09, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x25, 0x0a, 0x0a, 0x76, 0x65, 0x6c, 0x6f, 0x63,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x01, 0x42, 0x05, 0x92, 0x3f, 0x02,
	0x10, 0x0a, 0x52, 0x0a, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x2b,
	0x0a, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x01, 0x42, 0x05, 0x92, 0x3f, 0x02, 0x10, 0x0a, 0x52, 0x0d, 0x61, 0x63,
	0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x0a, 0x06, 0x65,
	0x66, 0x66, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x01, 0x42, 0x05, 0x92, 0x3f, 0x02,
	0x10, 0x0a, 0x52, 0x06, 0x65, 0x66, 0x66, 0x6f, 0x72, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x3a, 0x06, 0x92, 0x3f, 0x03, 0x48, 0xf5, 0x02, 0x22, 0xa2,
	0x01, 0x0a, 0x0f, 0x4a, 0x6f, 0x69, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x12, 0x2b, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x61, 0x6c, 0x6b,
	0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x1f, 0x0a, 0x0b, 0x6a, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6a, 0x6f, 0x69, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x12, 0x39, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x61, 0x6c, 0x6b, 0x2e, 0x4a,
	0x6f, 0x69, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x3a, 0x06, 0x92, 0x3f, 0x03,
	0x48, 0xf6, 0x02, 0x42, 0x2f, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x6b, 0x69, 0x74, 0x2f, 0x6d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x74, 0x61, 0x6c, 0x6b, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2d, 0x67, 0x6f,
}

var (
	file_machinetalk_protobuf_ros_proto_rawDescOnce sync.Once
	file_machinetalk_protobuf_ros_proto_rawDescData = file_machinetalk_protobuf_ros_proto_rawDesc
)

func file_machinetalk_protobuf_ros_proto_rawDescGZIP() []byte {
	file_machinetalk_protobuf_ros_proto_rawDescOnce.Do(func() {
		file_machinetalk_protobuf_ros_proto_rawDescData = protoimpl.X.CompressGZIP(file_machinetalk_protobuf_ros_proto_rawDescData)
	})
	return file_machinetalk_protobuf_ros_proto_rawDescData
}

var file_machinetalk_protobuf_ros_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_machinetalk_protobuf_ros_proto_goTypes = []interface{}{
	(*Time)(nil),                 // 0: machinetalk.Time
	(*Header)(nil),               // 1: machinetalk.Header
	(*JointTrajectoryPoint)(nil), // 2: machinetalk.JointTrajectoryPoint
	(*JointTrajectory)(nil),      // 3: machinetalk.JointTrajectory
}
var file_machinetalk_protobuf_ros_proto_depIdxs = []int32{
	0, // 0: machinetalk.Header.stamp:type_name -> machinetalk.Time
	1, // 1: machinetalk.JointTrajectory.header:type_name -> machinetalk.Header
	2, // 2: machinetalk.JointTrajectory.points:type_name -> machinetalk.JointTrajectoryPoint
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_machinetalk_protobuf_ros_proto_init() }
func file_machinetalk_protobuf_ros_proto_init() {
	if File_machinetalk_protobuf_ros_proto != nil {
		return
	}
	file_machinetalk_protobuf_nanopb_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_machinetalk_protobuf_ros_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Time); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machinetalk_protobuf_ros_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Header); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machinetalk_protobuf_ros_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JointTrajectoryPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machinetalk_protobuf_ros_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JointTrajectory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_machinetalk_protobuf_ros_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_machinetalk_protobuf_ros_proto_goTypes,
		DependencyIndexes: file_machinetalk_protobuf_ros_proto_depIdxs,
		MessageInfos:      file_machinetalk_protobuf_ros_proto_msgTypes,
	}.Build()
	File_machinetalk_protobuf_ros_proto = out.File
	file_machinetalk_protobuf_ros_proto_rawDesc = nil
	file_machinetalk_protobuf_ros_proto_goTypes = nil
	file_machinetalk_protobuf_ros_proto_depIdxs = nil
}
